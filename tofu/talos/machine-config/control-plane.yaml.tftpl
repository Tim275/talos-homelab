# Control plane specific settings only - common config comes from common.yaml.tftpl

cluster:
  allowSchedulingOnControlPlanes: true
  network:
    cni:
      name: none
  proxy:
    disabled: true
  # Gateway API CRDs
  extraManifests:
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/experimental/gateway.networking.k8s.io_gateways.yaml
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/standard/gateway.networking.k8s.io_grpcroutes.yaml
  - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.3.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml
  inlineManifests:
  - name: cilium-values
    contents: |
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cilium-values
        namespace: kube-system
      data:
        values.yaml: |-
          ${indent(10, cilium_values)}
  - name: cilium-bootstrap
    contents: |
      ${indent(6, cilium_install)}

# ========================================================================
# ERKLÄRUNG: Was diese control-plane.yaml.tftpl bewirkt
# ========================================================================
#
# ZWECK:
# - Control Plane spezifische Konfiguration (Master Nodes)
# - Wird MIT common.yaml.tftpl kombiniert (wie @vehagn macht)
#
# WAS HIER KONFIGURIERT WIRD:
#
# 1. SCHEDULING auf Control Planes erlaubt:
#    - allowSchedulingOnControlPlanes: true
#    - Wichtig für kleine Homelab Setups wo jeder Node genutzt werden soll
#
# 2. CNI & PROXY deaktiviert:
#    - cni.name: none → Cilium wird separat installiert
#    - proxy.disabled: true → Cilium ersetzt kube-proxy
#
# 3. GATEWAY API CRDs:
#    - Automatisch installiert beim Bootstrap
#    - Nötig für moderne Ingress/Gateway Konfiguration
#
# 4. CILIUM Bootstrap:
#    - Inline Manifests für Cilium Installation
#    - Values als ConfigMap für spätere Anpassungen
#
# RESULTAT: Control Planes die auch Workloads ausführen können (Homelab-optimiert)
# ========================================================================