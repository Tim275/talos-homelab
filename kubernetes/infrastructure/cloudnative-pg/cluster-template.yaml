# PostgreSQL Cluster Template
# This creates a ready-to-use PostgreSQL cluster with HA and monitoring

apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgresql-cluster
  namespace: postgresql-system
  labels:
    app.kubernetes.io/name: postgresql-cluster
    platform.tier: data
spec:
  # High availability with 3 instances
  instances: 3
  
  # PostgreSQL version
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1
  
  # Resource allocation (homelab-optimized)
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "1Gi" 
      cpu: "1000m"
      
  # Storage configuration
  storage:
    size: 20Gi
    storageClass: longhorn  # Using your Longhorn storage
    
  # Backup configuration
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      destinationPath: "s3://postgresql-backups"
      s3Credentials:
        accessKeyId:
          name: backup-credentials
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: backup-credentials
          key: SECRET_ACCESS_KEY
      wal:
        retention: "7d"
      data:
        retention: "30d"
        
  # Monitoring configuration  
  monitoring:
    enabled: true
    customQueries:
      - name: "pg_stat_user_tables"
        query: "SELECT schemaname, tablename, n_tup_ins, n_tup_upd, n_tup_del FROM pg_stat_user_tables"
        
  # Bootstrap from existing cluster or create new
  bootstrap:
    initdb:
      database: app
      owner: app
      secret:
        name: postgresql-app-secret
        
  # Pod anti-affinity for HA
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: postgresql
              operator: In
              values: 
              - postgresql-cluster
          topologyKey: kubernetes.io/hostname

---
# Application database user credentials
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-app-secret
  namespace: postgresql-system
type: kubernetes.io/basic-auth
data:
  username: YXBw  # base64 encoded 'app'
  password: c2VjdXJlUGFzc3dvcmQxMjM=  # base64 encoded 'securePassword123' - CHANGE THIS!