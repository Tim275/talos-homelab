apiVersion: v1
kind: Secret
metadata:
  name: sealed-secrets-key-persistent
  namespace: sealed-secrets
  labels:
    sealedsecrets.bitnami.com/sealed-secrets-key: active
type: kubernetes.io/tls
data:
  # These will be populated from the terraform-generated certificate files
  # Base64 encoded content of:
  # - tls.crt: tofu/bootstrap/sealed-secrets/certificate/sealed-secrets.crt
  # - tls.key: tofu/bootstrap/sealed-secrets/certificate/sealed-secrets.key
  tls.crt: ""
  tls.key: ""
---
# This ConfigMap will be used to populate the secret with actual certificate data
# during the bootstrap process
apiVersion: v1
kind: ConfigMap
metadata:
  name: sealed-secrets-bootstrap-config
  namespace: sealed-secrets
data:
  instructions: |
    # BOOTSTRAP INSTRUCTIONS:
    # 1. Base64 encode the certificate files:
    #    kubectl create secret tls sealed-secrets-key-persistent \
    #      --cert=tofu/bootstrap/sealed-secrets/certificate/sealed-secrets.crt \
    #      --key=tofu/bootstrap/sealed-secrets/certificate/sealed-secrets.key \
    #      --namespace=sealed-secrets \
    #      --dry-run=client -o yaml | kubectl apply -f -
    #
    # 2. Add the required label:
    #    kubectl label secret sealed-secrets-key-persistent \
    #      sealedsecrets.bitnami.com/sealed-secrets-key=active \
    #      --namespace=sealed-secrets
    #
    # This ensures the same private key is used across all tofu destroy/apply cycles!