apiVersion: batch/v1
kind: Job
metadata:
  name: sealed-secrets-bootstrap
  namespace: sealed-secrets
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: sealed-secrets-bootstrap
      containers:
      - name: bootstrap
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "🔐 Bootstrapping Sealed Secrets..."

          # Wait for controller to be ready
          kubectl wait --for=condition=ready pod -l name=sealed-secrets-controller -n sealed-secrets --timeout=300s

          # Install kubeseal if not present
          if ! command -v kubeseal &> /dev/null; then
            echo "📦 Installing kubeseal..."
            wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.27.1/kubeseal-0.27.1-linux-amd64.tar.gz
            tar -xzf kubeseal-0.27.1-linux-amd64.tar.gz
            chmod +x kubeseal
            mv kubeseal /usr/local/bin/
          fi

          # Fetch the public key
          echo "🔑 Fetching Sealed Secrets public key..."
          kubeseal --fetch-cert > /tmp/sealed-secrets-cert.pem

          # Create example sealed secret
          echo "✅ Creating example sealed secret..."
          echo -n mypassword | kubectl create secret generic mysecret --dry-run=client --from-file=password=/dev/stdin -o yaml | kubeseal --cert=/tmp/sealed-secrets-cert.pem -o yaml > /tmp/example-sealedsecret.yaml

          echo "🚀 Sealed Secrets bootstrap completed!"
          echo "📋 Public key available at: /tmp/sealed-secrets-cert.pem"
          echo "📋 Example sealed secret: /tmp/example-sealedsecret.yaml"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets-bootstrap
  namespace: sealed-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets-bootstrap
rules:
- apiGroups: [""]
  resources: ["secrets", "pods"]
  verbs: ["get", "list", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]
- apiGroups: ["bitnami.com"]
  resources: ["sealedsecrets"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets-bootstrap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets-bootstrap
subjects:
- kind: ServiceAccount
  name: sealed-secrets-bootstrap
  namespace: sealed-secrets