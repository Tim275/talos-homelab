apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 🏢 ENTERPRISE INFRASTRUCTURE - TRUE NETFLIX/GOOGLE/SPOTIFY PATTERN!
# ====================================================================
# This structure follows REAL enterprise patterns from:
# - Netflix: Layered infrastructure with service ownership
# - Google: Cloud-native platform engineering
# - Spotify: Golden Path infrastructure templates
# - Microsoft: Multi-cluster infrastructure as code

# namespace: argocd  # Removed - causes namespace conflicts when used by ArgoCD

# 🏢 Enterprise Infrastructure Labels
labels:
  - pairs:
      app.kubernetes.io/managed-by: argocd
      app.kubernetes.io/part-of: timour-homelab
      app.kubernetes.io/layer: infrastructure
      enterprise.pattern: applicationset
      team: timour

# 🚀 ENTERPRISE TIER-0 NON PLUS ULTRA PATTERN!
# ===============================================
# TRUE KUSTOMIZE CONTROL - Comment/Uncomment ANYTHING!
# Netflix/Google/Meta/Amazon LEVEL - GRANULAR WIE FICK!
#
# 💡 CONTROL EVERYTHING:
# - Comment line = Component DISABLED
# - Uncomment line = Component ENABLED
# - NO ApplicationSets needed anymore!
# - PURE KUSTOMIZE POWER!

resources:
  # 🏛️ INFRASTRUCTURE PROJECT
  - project.yaml

  # 🎯 DOMAIN APPLICATIONSETS - ENTERPRISE TIER-2 PATTERN!
  # ======================================================
  # Each domain gets its own ApplicationSet for clean UI hierarchy
  - controllers-applicationset.yaml    # 🎛️ GitOps, Certs, Secrets, DB Operators
  - network-applicationset.yaml        # 🌐 CNI, Service Mesh, Load Balancing
  - storage-applicationset.yaml        # 💾 Distributed Storage, CSI, Backup
  - monitoring-applicationset.yaml     # 📊 Metrics, Alerting, Dashboards
  - observability-applicationset.yaml  # 🔍 Logs, Search, Analytics

  # 🎯 OLD MEGA APPLICATIONSET (DISABLED - caused UI chaos)
  # - applications.yaml

  # 🎛️ DOMAIN APPLICATIONSETS NOW HANDLE COMPONENT CONTROL!
  # ========================================================
  # The individual domain ApplicationSets now discover and deploy components:
  # - controllers-applicationset.yaml manages controllers/*
  # - network-applicationset.yaml manages network/*
  # - storage-applicationset.yaml manages storage/*
  # - monitoring-applicationset.yaml manages monitoring/*
  # - observability-applicationset.yaml manages observability/*
  #
  # 💡 ENABLE/DISABLE CONTROL moved to individual component kustomization.yaml files!

# 🎯 GRANULAR COMPONENT CONTROL via Strategic Merge Patches
# ==========================================================
# This is a cleaner way but ApplicationSets don't support strategic merge well
# So we need to use JSON patches or better: separate Application files!

# 📊 Enterprise Annotations
commonAnnotations:
  argocd.argoproj.io/sync-wave: "0"
  enterprise.architecture: "true"
  gitops.pattern: "applicationset-layers"
  infrastructure.scalability: "10000+"