apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 🏢 ENTERPRISE INFRASTRUCTURE - TRUE NETFLIX/GOOGLE/SPOTIFY PATTERN!
# ====================================================================
# This structure follows REAL enterprise patterns from:
# - Netflix: Layered infrastructure with service ownership
# - Google: Cloud-native platform engineering
# - Spotify: Golden Path infrastructure templates
# - Microsoft: Multi-cluster infrastructure as code

# namespace: argocd  # Removed - causes namespace conflicts when used by ArgoCD

# 🏢 Enterprise Infrastructure Labels
labels:
  - pairs:
      app.kubernetes.io/managed-by: argocd
      app.kubernetes.io/part-of: timour-homelab
      app.kubernetes.io/layer: infrastructure
      enterprise.pattern: applicationset
      team: timour

# 🚀 ENTERPRISE TIER-0 NON PLUS ULTRA PATTERN!
# ===============================================
# TRUE KUSTOMIZE CONTROL - Comment/Uncomment ANYTHING!
# Netflix/Google/Meta/Amazon LEVEL - GRANULAR WIE FICK!
#
# 💡 CONTROL EVERYTHING:
# - Comment line = Component DISABLED
# - Uncomment line = Component ENABLED
# - NO ApplicationSets needed anymore!
# - PURE KUSTOMIZE POWER!

resources:
  # 🏛️ INFRASTRUCTURE PROJECT
  - project.yaml

  # 🎯 INFRASTRUCTURE APPLICATIONSET
  - applications.yaml

  # 🎛️ INFRASTRUCTURE COMPONENTS (Kustomize controls what gets deployed!)
  # =====================================================================
  # Controllers Layer
  - controllers/argocd/              # ✅ GitOps Platform
  - controllers/cert-manager/        # ✅ Certificate Management
  - controllers/sealed-secrets/      # ✅ Secret Management
  - controllers/argo-rollouts/       # ✅ Progressive Delivery
  - controllers/cloudnative-pg/      # ✅ PostgreSQL Operator
  # - controllers/cluster-autoscaler/ # ❌ DISABLED - Not needed

  # Network Layer
  - network/cilium/                  # ✅ CNI & Network Policies
  - network/istio-base/              # ✅ Service Mesh Base
  - network/istio-cni/               # ✅ Istio CNI
  - network/istio-control-plane/     # ✅ Istiod
  - network/istio-gateway/           # ✅ Ingress Gateway
  - network/cloudflared/             # ✅ Tunnel
  # - network/metallb/               # ❌ DISABLED - Use Cilium LB

  # Storage Layer
  - storage/rook-ceph/               # ✅ Distributed Storage
  - storage/proxmox-csi/             # ✅ VM Storage Integration
  - storage/velero/                  # ✅ Backup & Disaster Recovery
  # - storage/longhorn/              # ❌ DISABLED - Use Rook Ceph
  # - storage/minio/                 # ❌ DISABLED - Use Rook RGW

  # Monitoring Layer
  - monitoring/prometheus/           # ✅ Metrics Collection
  - monitoring/grafana/              # ✅ Dashboards
  - monitoring/alertmanager/         # ✅ Alert Routing
  - monitoring/jaeger/               # ✅ Distributed Tracing
  - monitoring/metrics-server/       # ✅ HPA Metrics
  - monitoring/opencost/             # ✅ Cost Analysis
  # - monitoring/loki/               # ❌ DISABLED - Use Vector+ES
  # - monitoring/hubble/             # ❌ DISABLED - Built into Cilium

  # Observability Layer
  - observability/vector/            # ✅ Log Collection & Processing
  - observability/elasticsearch/     # ✅ Search & Analytics
  - observability/kibana/            # ✅ Log Visualization
  # - observability/fluent-bit/      # ❌ DISABLED - Use Vector
  # - observability/fluentd/         # ❌ DISABLED - Use Vector
  # - observability/opentelemetry/   # ❌ DISABLED - Use Jaeger directly

# 🎯 GRANULAR COMPONENT CONTROL via Strategic Merge Patches
# ==========================================================
# This is a cleaner way but ApplicationSets don't support strategic merge well
# So we need to use JSON patches or better: separate Application files!

# 📊 Enterprise Annotations
commonAnnotations:
  argocd.argoproj.io/sync-wave: "0"
  enterprise.architecture: "true"
  gitops.pattern: "applicationset-layers"
  infrastructure.scalability: "10000+"