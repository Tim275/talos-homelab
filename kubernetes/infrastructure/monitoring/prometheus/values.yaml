# Global CRD control
crds:
  enabled: false

# Skip CRD installation completely
installCRDs: false

# Nur Prometheus + Operator, keine Grafana
prometheus:
  enabled: true   # âœ… Enabled for Rook Ceph monitoring
  prometheusSpec:
    replicas: 1
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block-enterprise
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
    resources:
      limits:
        cpu: 2000m
        memory: 6Gi  # Increased for enterprise monitoring scale
      requests:
        cpu: 1000m
        memory: 4Gi  # Higher baseline for faster startup

alertmanager:
  enabled: false  # Disabled until CRDs are deployed as microservices
  alertmanagerSpec:
    replicas: 1
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: rook-ceph-block-enterprise
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi

prometheusOperator:
  enabled: true
  # Disable ALL CRDs to avoid annotation size issues
  manageCrds: false
  createCustomResource: false
  admissionWebhooks:
    enabled: false  # Also disable webhooks to avoid CRD dependencies
  tls:
    enabled: false  # Disable TLS completely to fix operator crash
  resources:
    limits:
      cpu: 500m
      memory: 1Gi  # Increased for faster operator startup
    requests:
      cpu: 200m
      memory: 512Mi  # Higher baseline for CRD management

kubeStateMetrics:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi

nodeExporter:
  enabled: true
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Grafana ausschalten - wird separat deployed
grafana:
  enabled: false
