# üöÄ NASA-LEVEL PLATFORM DATABASE MONITORING
# ===========================================
# Comprehensive monitoring for all platform database systems
# Enterprise database observability: PostgreSQL, InfluxDB, MongoDB, Redis
#

# üêò CLOUDNATIVE-PG POSTGRESQL INSTANCES MONITORING
# ================================================
# N8N Production PostgreSQL Cluster
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: n8n-prod-postgresql
  namespace: monitoring
  labels:
    app.kubernetes.io/name: n8n-prod-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: platform-data
    release: prometheus-operator  # NASA-level discovery
spec:
  namespaceSelector:
    matchNames:
      - n8n-prod
  selector:
    matchLabels:
      postgresql: n8n-prod-cnpg
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'pg_.*|postgresql_.*|cnpg_.*'
          action: keep

---
# üêò N8N Development PostgreSQL Cluster
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: n8n-dev-postgresql
  namespace: monitoring
  labels:
    app.kubernetes.io/name: n8n-dev-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: platform-data
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - n8n-dev
  selector:
    matchLabels:
      postgresql: n8n-dev-cnpg
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'pg_.*|postgresql_.*|cnpg_.*'
          action: keep

---
# üêò BACKSTAGE POSTGRESQL CLUSTER
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: backstage-postgresql
  namespace: monitoring
  labels:
    app.kubernetes.io/name: backstage-postgresql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: platform-developer
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - backstage
  selector:
    matchLabels:
      postgresql: backstage-postgres
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'pg_.*|postgresql_.*|cnpg_.*'
          action: keep

---
# üìä INFLUXDB SERVICEMONITOR - TIME SERIES DATABASE
# ================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: influxdb
  namespace: monitoring
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: platform-data
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - influxdb
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'influxdb_.*'
          action: keep

---
# üçÉ MONGODB SERVICEMONITOR - DOCUMENT DATABASE
# ===========================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mongodb
  namespace: monitoring
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: platform-data
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - mongodb
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'mongodb_.*'
          action: keep

---
# üî¥ REDIS SERVICEMONITOR - CACHE & SESSION STORE
# ==============================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-authelia
  namespace: monitoring
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: platform-identity
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - authelia
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'redis_.*'
          action: keep
