# üöÄ REMAINING INFRASTRUCTURE SERVICEMONITORS
# ===========================================
# Combined ServiceMonitors for remaining infrastructure components
# Comprehensive monitoring for Vector, Velero, CloudNative-PG, OpenTelemetry, Cloudflared
#

# üìä VECTOR SERVICEMONITOR - LOG PIPELINE MONITORING
# =================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: vector
  namespace: monitoring
  labels:
    app.kubernetes.io/name: vector
    app.kubernetes.io/component: agent
    app.kubernetes.io/part-of: observability
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - vector
  selector:
    matchLabels:
      app.kubernetes.io/name: vector
  endpoints:
    - port: prom-exporter
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'vector_.*'
          action: keep

---
# üíæ VELERO SERVICEMONITOR - BACKUP MONITORING
# ===========================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: velero
  namespace: monitoring
  labels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: backup
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - velero
  selector:
    matchLabels:
      app.kubernetes.io/name: velero
  endpoints:
    - port: monitoring
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'velero_.*'
          action: keep

---
# üêò CLOUDNATIVE-PG SERVICEMONITOR - POSTGRESQL OPERATOR MONITORING
# ================================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cloudnative-pg-operator
  namespace: monitoring
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: database
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - cloudnative-pg
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudnative-pg
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'cnpg_.*|controller_runtime_.*'
          action: keep

---
# üìä OPENTELEMETRY COLLECTOR SERVICEMONITOR
# ========================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: opentelemetry-collector
  namespace: monitoring
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/component: opentelemetry-collector
    app.kubernetes.io/part-of: observability
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - opentelemetry
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'otelcol_.*'
          action: keep

---
# ‚òÅÔ∏è CLOUDFLARED SERVICEMONITOR - TUNNEL MONITORING
# ================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cloudflared
  namespace: monitoring
  labels:
    app.kubernetes.io/name: cloudflared
    app.kubernetes.io/component: tunnel
    app.kubernetes.io/part-of: network
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - cloudflared
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflared
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'cloudflared_.*'
          action: keep

---
# üìä JAEGER SERVICEMONITOR - DISTRIBUTED TRACING MONITORING
# ========================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: monitoring
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
    app.kubernetes.io/part-of: observability
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - jaeger
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
  endpoints:
    - port: admin-http
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'jaeger_.*'
          action: keep
