apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 🌊 Sync Wave 6: Grafana CRD Resources (After Grafana Operator Wave 4)
commonAnnotations:
  argocd.argoproj.io/sync-wave: "6"

# 🎯 GRAFANA OPERATOR PATTERN - Only CRD resources, no Helm chart!
# Grafana Operator (deployed separately) manages the Grafana instance
  # 📊 ConfigMap Dashboards - keep your preferred dashboard pattern
  # (These work with both Helm Grafana and Grafana Operator)

  # 🎯 NATIVE GRAFANA OPERATOR DASHBOARDS - ConfigMap References
  # Links traditional ConfigMaps to GrafanaDashboard CRDs (Vegarn pattern)

  # 🎯 GRAFANA OPERATOR DASHBOARDS - Native GrafanaDashboard CRDs
  # Enterprise-grade monitoring dashboards using Grafana Operator - Direct URL-based from Grafana.com
resources:
  - grafana-admin-secret.yaml
  - grafana-instance.yaml
  - prometheus-datasource.yaml       # Original Prometheus datasource
  - victoriametrics-datasource.yaml  # VictoriaMetrics as default datasource
  - loki-datasource.yaml
  # - datasources.yaml  # Old datasources config
  - dashboards-configmap.yaml
  - dashboards/
  - configmap-dashboards/
  - dashboards/k8s-comprehensive.yaml
  - dashboards/prometheus-overview.yaml
  - dashboards/elasticsearch-detailed.yaml
  - dashboards/kafka-monitoring.yaml
  - operator-dashboards/

  # 🚀 MASSIVE GRAFANA.COM DASHBOARD COLLECTION (12/19 successfully imported via API)
  # Working dashboards (imported via API): Ceph Cluster, Node Exporter Full, K8s Views, Redis, NGINX Ingress, etc.
  # Files for documentation and future GitOps:
  - working-kubernetes-dashboard.yaml     # ✅ Working K8s Global View (ID: 15757)
  - working-cilium-dashboard.yaml         # ✅ Working Cilium Network (ID: 24056)
  - working-elasticsearch-dashboard.yaml  # ✅ Working Elasticsearch (ID: 14191)
# - massive-dashboard-collection.yaml   # ❌ CRD schema validation failed (commented out)
# - ceph-cluster-dashboard.yaml         # ❌ CRD schema validation failed (commented out)
# Scripts and documentation:
# - import-batch.sh                     # ✅ Successful API import script
# - import-massive-dashboards.py        # ✅ Python API import script
# - DASHBOARD_IMPORT_SUCCESS.md         # 📋 Complete success report
