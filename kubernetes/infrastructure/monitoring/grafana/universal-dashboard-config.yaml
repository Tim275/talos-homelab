---
# UNIVERSAL PROMETHEUS & GRAFANA CONFIGURATION
# Infrastructure as Code - Accept ALL ServiceMonitors and GrafanaDashboards

# 1. Prometheus Configuration - Accept ALL ServiceMonitors
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-operator-kube-p-prometheus
  namespace: monitoring
spec:
  # Remove label selector - accept ALL ServiceMonitors from ANY namespace
  serviceMonitorSelector: {}
  serviceMonitorNamespaceSelector: {}

  # Remove label selector - accept ALL PodMonitors from ANY namespace
  podMonitorSelector: {}
  podMonitorNamespaceSelector: {}

  # Remove label selector - accept ALL PrometheusRules from ANY namespace
  ruleSelector: {}
  ruleNamespaceSelector: {}

---
# 2. Grafana Instance Configuration - Accept ALL GrafanaDashboards
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana-enterprise
  namespace: monitoring
  labels:
    app: grafana
    dashboards: grafana  # Accept both label patterns
spec:
  version: "12.1.0"
  config:
    server:
      http_port: "3000"
      root_url: "http://grafana.monitoring.svc.cluster.local"
    security:
      admin_user: admin
      admin_password: admin
      disable_gravatar: "true"
    users:
      allow_sign_up: "false"
      auto_assign_org: "true"
      auto_assign_org_role: Viewer

  deployment:
    spec:
      replicas: 1
      template:
        spec:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            runAsNonRoot: true
          containers:
            - name: grafana
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL

  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: rook-ceph-block-enterprise
      resources:
        requests:
          storage: 10Gi

  service:
    spec:
      type: LoadBalancer
      ports:
        - name: http
          port: 3000
          targetPort: 3000
