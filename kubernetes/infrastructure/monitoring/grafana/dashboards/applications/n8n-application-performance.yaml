apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: n8n-application-performance
  namespace: grafana
  labels:
    app.kubernetes.io/part-of: monitoring-stack
    tier: applications
spec:
  allowCrossNamespaceImport: true
  instanceSelector:
    matchLabels:
      app: grafana
  json: |
    {
      "id": null,
      "title": "ðŸš€ N8N Workflow Automation Platform",
      "tags": ["n8n", "automation", "workflows", "applications"],
      "timezone": "browser",
      "panels": [
        {
          "id": 1,
          "title": "N8N Workflow Platform",
          "type": "text",
          "gridPos": {"h": 4, "w": 24, "x": 0, "y": 0},
          "options": {
            "content": "<div style=\"text-align: center; font-size: 24px; padding: 20px; background: linear-gradient(90deg, #ea4aaa, #ff6d6d);\">\n<img src=\"https://raw.githubusercontent.com/n8n-io/n8n/master/packages/editor-ui/public/favicon.ico\" alt=\"N8N\" style=\"height: 60px; vertical-align: middle; margin-right: 20px;\">\n<strong style=\"color: white;\">ðŸš€ N8N Workflow Automation</strong>\n<p style=\"font-size: 16px; color: #ffe4e6; margin-top: 10px;\">Dev & Production Environment Monitoring</p>\n</div>"
          }
        },
        {
          "id": 2,
          "title": "Environment Health",
          "type": "stat",
          "targets": [
            {
              "expr": "count(up{job=\"kubernetes-pods\", namespace=~\"n8n.*\"})",
              "legendFormat": "Total N8N Pods"
            },
            {
              "expr": "count(up{job=\"kubernetes-pods\", namespace=~\"n8n.*\"} == 1)",
              "legendFormat": "Healthy Pods"
            },
            {
              "expr": "count(kube_pod_status_phase{namespace=~\"n8n.*\", phase=\"Running\"})",
              "legendFormat": "Running Pods"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "thresholds": {
                "steps": [
                  {"color": "red", "value": 0},
                  {"color": "green", "value": 1}
                ]
              }
            }
          },
          "gridPos": {"h": 6, "w": 8, "x": 0, "y": 4}
        },
        {
          "id": 3,
          "title": "Database Connections",
          "type": "stat",
          "targets": [
            {
              "expr": "count(up{job=\"kubernetes-pods\", namespace=~\"n8n.*\", pod=~\".*postgres.*\"})",
              "legendFormat": "PostgreSQL Instances"
            },
            {
              "expr": "sum(pg_stat_database_numbackends{datname!~\"template.*|postgres\"})",
              "legendFormat": "Active DB Connections"
            }
          ],
          "gridPos": {"h": 6, "w": 8, "x": 8, "y": 4}
        },
        {
          "id": 4,
          "title": "Resource Usage Overview",
          "type": "gauge",
          "targets": [
            {
              "expr": "(sum(container_memory_usage_bytes{namespace=~\"n8n.*\", container!=\"POD\"}) / sum(container_spec_memory_limit_bytes{namespace=~\"n8n.*\", container!=\"POD\"})) * 100",
              "legendFormat": "Memory Usage %"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "thresholds": {
                "steps": [
                  {"color": "green", "value": 0},
                  {"color": "yellow", "value": 70},
                  {"color": "red", "value": 90}
                ]
              },
              "min": 0,
              "max": 100,
              "unit": "percent"
            }
          },
          "gridPos": {"h": 6, "w": 8, "x": 16, "y": 4}
        },
        {
          "id": 5,
          "title": "N8N Application CPU Usage",
          "type": "graph",
          "targets": [
            {
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"n8n-dev\", container=\"n8n\"}[5m]) * 100",
              "legendFormat": "N8N Dev CPU %"
            },
            {
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"n8n-prod\", container=\"n8n\"}[5m]) * 100",
              "legendFormat": "N8N Prod CPU %"
            }
          ],
          "yAxes": [
            {"label": "CPU Percent", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 10}
        },
        {
          "id": 6,
          "title": "N8N Application Memory Usage",
          "type": "graph",
          "targets": [
            {
              "expr": "container_memory_usage_bytes{namespace=\"n8n-dev\", container=\"n8n\"}",
              "legendFormat": "N8N Dev Memory"
            },
            {
              "expr": "container_memory_usage_bytes{namespace=\"n8n-prod\", container=\"n8n\"}",
              "legendFormat": "N8N Prod Memory"
            },
            {
              "expr": "container_spec_memory_limit_bytes{namespace=\"n8n-dev\", container=\"n8n\"}",
              "legendFormat": "Dev Memory Limit"
            },
            {
              "expr": "container_spec_memory_limit_bytes{namespace=\"n8n-prod\", container=\"n8n\"}",
              "legendFormat": "Prod Memory Limit"
            }
          ],
          "yAxes": [
            {"label": "Bytes", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 10}
        },
        {
          "id": 7,
          "title": "PostgreSQL Performance (Dev vs Prod)",
          "type": "graph",
          "targets": [
            {
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"n8n-dev\", container=\"postgres\"}[5m]) * 100",
              "legendFormat": "Dev DB CPU %"
            },
            {
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"n8n-prod\", container=\"postgres\"}[5m]) * 100",
              "legendFormat": "Prod DB CPU %"
            }
          ],
          "yAxes": [
            {"label": "CPU Percent", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 18}
        },
        {
          "id": 8,
          "title": "Database Connections by Environment",
          "type": "graph",
          "targets": [
            {
              "expr": "pg_stat_database_numbackends{datname=\"n8n\"} and on(instance) label_replace(up{job=\"kubernetes-pods\", namespace=\"n8n-dev\"}, \"instance\", \"$1\", \"pod\", \"(.*)\")",
              "legendFormat": "Dev DB Connections"
            },
            {
              "expr": "pg_stat_database_numbackends{datname=\"n8n\"} and on(instance) label_replace(up{job=\"kubernetes-pods\", namespace=\"n8n-prod\"}, \"instance\", \"$1\", \"pod\", \"(.*)\")",
              "legendFormat": "Prod DB Connections"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 18}
        },
        {
          "id": 9,
          "title": "Pod Restart Count",
          "type": "graph",
          "targets": [
            {
              "expr": "kube_pod_container_status_restarts_total{namespace=~\"n8n.*\"}",
              "legendFormat": "{{namespace}}/{{pod}} restarts"
            }
          ],
          "yAxes": [
            {"label": "Restart Count", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 26}
        },
        {
          "id": 10,
          "title": "Network I/O",
          "type": "graph",
          "targets": [
            {
              "expr": "rate(container_network_receive_bytes_total{namespace=~\"n8n.*\"}[5m])",
              "legendFormat": "{{namespace}}/{{pod}} RX"
            },
            {
              "expr": "rate(container_network_transmit_bytes_total{namespace=~\"n8n.*\"}[5m])",
              "legendFormat": "{{namespace}}/{{pod}} TX"
            }
          ],
          "yAxes": [
            {"label": "Bytes/sec", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 26}
        },
        {
          "id": 11,
          "title": "Storage Usage",
          "type": "graph",
          "targets": [
            {
              "expr": "kubelet_volume_stats_used_bytes{namespace=~\"n8n.*\"}",
              "legendFormat": "{{namespace}}/{{persistentvolumeclaim}} used"
            },
            {
              "expr": "kubelet_volume_stats_capacity_bytes{namespace=~\"n8n.*\"}",
              "legendFormat": "{{namespace}}/{{persistentvolumeclaim}} capacity"
            }
          ],
          "yAxes": [
            {"label": "Bytes", "show": true},
            {"show": false}
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 34}
        },
        {
          "id": 12,
          "title": "Pod Status Summary",
          "type": "table",
          "targets": [
            {
              "expr": "kube_pod_info{namespace=~\"n8n.*\"}",
              "legendFormat": "{{namespace}} | {{pod}} | {{node}} | {{created_by_name}}"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 34}
        },
        {
          "id": 13,
          "title": "Database Transaction Rate",
          "type": "graph",
          "targets": [
            {
              "expr": "rate(pg_stat_database_xact_commit{datname=\"n8n\"}[5m])",
              "legendFormat": "{{instance}} commits/sec"
            },
            {
              "expr": "rate(pg_stat_database_xact_rollback{datname=\"n8n\"}[5m])",
              "legendFormat": "{{instance}} rollbacks/sec"
            }
          ],
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 42}
        },
        {
          "id": 14,
          "title": "Application Uptime",
          "type": "stat",
          "targets": [
            {
              "expr": "(time() - kube_pod_start_time{namespace=\"n8n-dev\", pod=~\"n8n.*\"}) / 86400",
              "legendFormat": "Dev Uptime (days)"
            },
            {
              "expr": "(time() - kube_pod_start_time{namespace=\"n8n-prod\", pod=~\"n8n.*\"}) / 86400",
              "legendFormat": "Prod Uptime (days)"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "days"
            }
          },
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 42}
        }
      ],
      "time": {"from": "now-1h", "to": "now"},
      "refresh": "30s"
    }
  folder: N8N
  resyncPeriod: 10m
