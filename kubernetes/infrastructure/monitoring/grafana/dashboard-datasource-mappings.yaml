# ðŸŽ¯ ENTERPRISE DASHBOARD DATASOURCE MAPPING - Clean CRD Approach
# Alternative solution using GrafanaDashboard.spec.datasources mapping
# This approach is for dashboards that still need explicit mapping

---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: ceph-cluster-enhanced
  namespace: monitoring
  labels:
    app.kubernetes.io/name: ceph-cluster-dashboard
    app.kubernetes.io/part-of: grafana
    dashboard-type: "infrastructure"
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"

  # ðŸŽ¯ DATASOURCE MAPPING - Enterprise clean approach
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "VictoriaMetrics"

  grafanaCom:
    id: 2842
    revision: 17

  folder: "Infrastructure Monitoring"

---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-cluster-enhanced
  namespace: monitoring
  labels:
    app.kubernetes.io/name: kubernetes-cluster-dashboard
    app.kubernetes.io/part-of: grafana
    dashboard-type: "platform"
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"

  # ðŸŽ¯ MULTIPLE DATASOURCE MAPPINGS
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "VictoriaMetrics"
    - inputName: "DS__PROMETHEUS"
      datasourceName: "VictoriaMetrics"
    - inputName: "prometheus"
      datasourceName: "VictoriaMetrics"

  grafanaCom:
    id: 315
    revision: 3

  folder: "Platform Monitoring"

---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: cilium-operator-enhanced
  namespace: monitoring
  labels:
    app.kubernetes.io/name: cilium-dashboard
    app.kubernetes.io/part-of: grafana
    dashboard-type: "networking"
spec:
  instanceSelector:
    matchLabels:
      dashboards: "grafana"

  # ðŸŽ¯ CILIUM SPECIFIC MAPPING
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "VictoriaMetrics"

  grafanaCom:
    id: 15513
    revision: 1

  folder: "Network Monitoring"
