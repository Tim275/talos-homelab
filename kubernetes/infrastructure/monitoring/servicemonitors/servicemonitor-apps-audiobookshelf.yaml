# ðŸš€ NASA-LEVEL AUDIOBOOKSHELF APPLICATION MONITORING
# ====================================================
# Comprehensive monitoring for Audiobookshelf media streaming applications
# Enterprise media library observability: Production + Development environments
#

# ðŸ“š AUDIOBOOKSHELF PRODUCTION APPLICATION MONITORING
# ==================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: audiobookshelf-prod-app
  namespace: monitoring
  labels:
    app.kubernetes.io/name: audiobookshelf-prod
    app.kubernetes.io/component: media-server
    app.kubernetes.io/part-of: apps-media
    release: prometheus-operator  # NASA-level discovery
spec:
  namespaceSelector:
    matchNames:
      - audiobookshelf-prod
  selector:
    matchLabels:
      app: audiobookshelf
  endpoints:
    - port: http
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'audiobookshelf_.*|http_.*|nodejs_.*|process_.*'
          action: keep
        # Keep media streaming metrics
        - sourceLabels: [__name__]
          regex: '.*(stream|library|book|user|session|download).*'
          action: keep
        # Keep media server performance metrics
        - sourceLabels: [__name__]
          regex: '.*(response_time|request|bandwidth|storage).*'
          action: keep

---
# ðŸ“š AUDIOBOOKSHELF DEVELOPMENT APPLICATION MONITORING
# ===================================================
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: audiobookshelf-dev-app
  namespace: monitoring
  labels:
    app.kubernetes.io/name: audiobookshelf-dev
    app.kubernetes.io/component: media-server
    app.kubernetes.io/part-of: apps-media
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - audiobookshelf-dev
  selector:
    matchLabels:
      app: audiobookshelf
  endpoints:
    - port: http
      interval: 30s
      path: /metrics
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'audiobookshelf_.*|http_.*|nodejs_.*|process_.*'
          action: keep
        # Keep development media metrics
        - sourceLabels: [__name__]
          regex: '.*(stream|library|book|user|session).*'
          action: keep
        # Keep development and testing metrics
        - sourceLabels: [__name__]
          regex: '.*(response_time|request|debug|test).*'
          action: keep

---
# ðŸ“Š AUDIOBOOKSHELF HEALTH MONITORING
# ===================================
# Fallback monitoring for HTTP health checks if /metrics not available
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: audiobookshelf-health-monitoring
  namespace: monitoring
  labels:
    app.kubernetes.io/name: audiobookshelf-health
    app.kubernetes.io/component: health-check
    app.kubernetes.io/part-of: apps-media
    release: prometheus-operator
spec:
  namespaceSelector:
    matchNames:
      - audiobookshelf-prod
      - audiobookshelf-dev
  selector:
    matchLabels:
      app: audiobookshelf
  endpoints:
    - port: http
      interval: 30s
      path: /health
      scheme: http
      scrapeTimeout: 10s
      metricRelabelings:
        - sourceLabels: [__name__]
          regex: 'up|http_.*|response_.*'
          action: keep
        # Keep availability metrics
        - sourceLabels: [__name__]
          regex: '.*(health|status|alive|ready).*'
          action: keep