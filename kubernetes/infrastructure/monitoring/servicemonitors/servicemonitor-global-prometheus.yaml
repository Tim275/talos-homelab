# üåê GLOBAL SERVICE MONITOR - Universal Prometheus Discovery
#
# üéØ SOLUTION: Automatically discover ALL services with prometheus labels
# Instead of creating individual ServiceMonitors for each service,
# this creates ONE ServiceMonitor that finds all services with prometheus.io annotations
#
# üè∑Ô∏è SERVICES MATCHED (automatically):
# - Any service with prometheus.io/scrape: "true"
# - Any service with prometheus.io/port: "<port>"
# - Any service with prometheus.io/path: "<path>" (optional, defaults to /metrics)
#
# ‚úÖ SERVICES THAT WILL WORK:
# - Kafka: if we add prometheus.io/scrape: "true" + prometheus.io/port: "9090"
# - Elasticsearch: if we add prometheus.io/scrape: "true" + prometheus.io/port: "9200"
# - N8N: if we add prometheus.io/scrape: "true" + prometheus.io/port: "5679"
# - Any other service with prometheus annotations
#
# üîß HOW TO ENABLE FOR ANY SERVICE:
# Just add these labels to the service:
# metadata:
#   annotations:
#     prometheus.io/scrape: "true"
#     prometheus.io/port: "9090"         # metrics port
#     prometheus.io/path: "/metrics"     # optional, defaults to /metrics
#
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: global-prometheus-discovery
  namespace: monitoring
  labels:
    app.kubernetes.io/name: global-servicemonitor
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: prometheus-stack
    team: platform
    release: prometheus-operator  # üéØ CRITICAL: Prometheus discovery
spec:
  namespaceSelector:
    any: true  # üåê Monitor services in ALL namespaces
  selector:
    matchLabels:
      # This will match services that have prometheus.io/scrape: "true"
      # We'll add this label to Kafka, Elasticsearch, etc.
      monitoring: prometheus
  endpoints:
    # Multiple endpoint configurations to match different service port patterns
    - port: metrics           # Default metrics port (standard naming)
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
    - port: tcp-ctrlplane     # Kafka JMX metrics port (Strimzi pattern)
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
    - port: https             # Elasticsearch HTTPS metrics port
      path: /_prometheus/metrics
      scheme: https
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
      tlsConfig:
        insecureSkipVerify: true
    - targetPort: 9090        # Direct port targeting (Kafka JMX)
      path: /metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true
    - targetPort: 9200        # Direct port targeting (Elasticsearch)
      path: /_prometheus/metrics
      interval: 30s
      scrapeTimeout: 10s
      honorLabels: true