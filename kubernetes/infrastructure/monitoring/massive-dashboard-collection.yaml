---
# üöÄ MASSIVE DASHBOARD COLLECTION - SOFORTL√ñSUNG
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-global-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  k8s-global.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üåç Kubernetes Global View",
        "tags": ["kubernetes", "overview", "global"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Cluster Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up",
                "legendFormat": "Services Up"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "CPU Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "100 - (avg(irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "CPU Usage %"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  prometheus.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üìä Prometheus Overview",
        "tags": ["prometheus", "monitoring"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Prometheus Targets",
            "type": "stat",
            "targets": [
              {
                "expr": "prometheus_sd_discovered_targets",
                "legendFormat": "Discovered Targets"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Scrape Duration",
            "type": "timeseries",
            "targets": [
              {
                "expr": "prometheus_target_scrape_duration_seconds",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: node-exporter-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  node-exporter.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üñ•Ô∏è Node Exporter Dashboard",
        "tags": ["node-exporter", "system"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cert-manager-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  cert-manager.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üîê Cert-Manager Dashboard",
        "tags": ["cert-manager", "security"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Certificate Expiry",
            "type": "stat",
            "targets": [
              {
                "expr": "certmanager_certificate_expiration_timestamp_seconds",
                "legendFormat": "{{name}}"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0}
          }
        ],
        "time": {"from": "now-24h", "to": "now"},
        "refresh": "1m"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  cilium.json: |
    {
      "dashboard": {
        "id": null,
        "title": "üåê Cilium Network Dashboard",
        "tags": ["cilium", "networking"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Cilium Agent Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"cilium-agent\"}",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
