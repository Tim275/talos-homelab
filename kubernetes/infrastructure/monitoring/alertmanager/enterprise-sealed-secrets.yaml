# 🔐 ENTERPRISE SEALED SECRETS FOR ALERTMANAGER
# Security-first approach for credentials management

apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-credentials-template
  namespace: monitoring
  annotations:
    # This is a TEMPLATE - run through kubeseal to create actual sealed secret
    template-only: "true"
type: Opaque
stringData:
  # SMTP Configuration
  smtp-username: "timour@hotmail.de"
  smtp-password: "YOUR_APP_SPECIFIC_PASSWORD_HERE"  # Replace with real password

  # Slack Webhooks (Multiple Channels)
  slack-api-url-critical: "https://hooks.slack.com/services/YOUR/CRITICAL/WEBHOOK"
  slack-api-url-warning: "https://hooks.slack.com/services/YOUR/WARNING/WEBHOOK"
  slack-api-url-info: "https://hooks.slack.com/services/YOUR/INFO/WEBHOOK"

  # PagerDuty Integration (Future)
  pagerduty-routing-key: "YOUR_PAGERDUTY_ROUTING_KEY"

  # OpsGenie Integration (Migrate before 2027)
  opsgenie-api-key: "YOUR_OPSGENIE_API_KEY"

  # Discord Webhook (Alternative)
  discord-webhook-url: "https://discord.com/api/webhooks/YOUR/WEBHOOK"

  # Microsoft Teams (Enterprise)
  teams-webhook-url: "https://outlook.office.com/webhook/YOUR/TEAMS/WEBHOOK"

  # Custom Incident Bot
  incident-bot-webhook: "http://incident-bot.homelab.io/webhook"
  incident-bot-api-key: "YOUR_INCIDENT_BOT_API_KEY"

---
# 📧 SMTP Credentials SealedSecret
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: alertmanager-smtp-credentials
  namespace: monitoring
  labels:
    tier: "security"
    component: "alertmanager"
spec:
  encryptedData:
    # These values are ENCRYPTED - replace with actual sealed values
    smtp-username: AgBy3i4OJSWK+PiTySYZZA...  # Generated by kubeseal
    smtp-password: AgAKYb1rAg+DDDD/QmXLzz...  # Generated by kubeseal
  template:
    metadata:
      name: alertmanager-smtp-credentials
      namespace: monitoring
    type: Opaque

---
# 📱 Slack Credentials SealedSecret
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: alertmanager-slack-credentials
  namespace: monitoring
  labels:
    tier: "security"
    component: "alertmanager"
spec:
  encryptedData:
    # These values are ENCRYPTED - replace with actual sealed values
    slack-api-url-critical: AgCKcLdxBQl5K2...   # Generated by kubeseal
    slack-api-url-warning: AgBtXnFpR1M4d...     # Generated by kubeseal
    slack-api-url-info: AgAKdxm8Nn7tPs...       # Generated by kubeseal
  template:
    metadata:
      name: alertmanager-slack-credentials
      namespace: monitoring
    type: Opaque

---
# 📟 Enterprise Integration Credentials SealedSecret
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: alertmanager-enterprise-credentials
  namespace: monitoring
  labels:
    tier: "security"
    component: "alertmanager"
spec:
  encryptedData:
    # These values are ENCRYPTED - replace with actual sealed values
    pagerduty-routing-key: AgCcxN5BQKk5...     # Generated by kubeseal
    teams-webhook-url: AgAKBxk8Mn7tDs...       # Generated by kubeseal
    discord-webhook-url: AgBKmxR1M4d8...       # Generated by kubeseal
    incident-bot-api-key: AgALpxN5BQKk...      # Generated by kubeseal
  template:
    metadata:
      name: alertmanager-enterprise-credentials
      namespace: monitoring
    type: Opaque

---
# 🛠️ INSTRUCTIONS FOR CREATING SEALED SECRETS
#
# 1. Create temporary secret with real values:
# kubectl create secret generic alertmanager-temp-secret \
#   --from-literal=smtp-username='timour@hotmail.de' \
#   --from-literal=smtp-password='YOUR_REAL_PASSWORD' \
#   --from-literal=slack-api-url-critical='https://hooks.slack.com/services/YOUR/WEBHOOK' \
#   --dry-run=client -o yaml > temp-secret.yaml
#
# 2. Seal the secret:
# kubeseal --format=yaml < temp-secret.yaml > alertmanager-sealed-secret.yaml
#
# 3. Delete temporary file:
# rm temp-secret.yaml
#
# 4. Apply sealed secret:
# kubectl apply -f alertmanager-sealed-secret.yaml
#
# 5. Verify secret was created:
# kubectl get secrets -n monitoring | grep alertmanager
#
# 6. Update AlertManager config to reference these secrets

---
# 🔧 ALERTMANAGER CONFIGURATION WITH SECRET REFERENCES
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config-with-secrets
  namespace: monitoring
  labels:
    version: "enterprise-v2"
    security: "sealed-secrets"
data:
  alertmanager.yml: |
    global:
      # SMTP from sealed secret
      smtp_smarthost: 'smtp-mail.outlook.com:587'
      smtp_from: 'alerts@homelab.io'
      smtp_auth_username_file: '/etc/alertmanager/secrets/smtp-username'
      smtp_auth_password_file: '/etc/alertmanager/secrets/smtp-password'
      smtp_require_tls: true

      # Default Slack API URL file
      slack_api_url_file: '/etc/alertmanager/secrets/slack-api-url-critical'

      # Timing configuration
      resolve_timeout: 5m

    route:
      receiver: 'enterprise-default'
      group_by: ['cluster', 'alertname', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h

      routes:
      # TIER-0: Critical - Multiple channels
      - matchers:
        - severity="critical"
        - tier="0"
        receiver: 'tier-0-all-channels'
        group_wait: 10s
        repeat_interval: 15m
        continue: true

      # TIER-1: High Priority
      - matchers:
        - severity="critical"
        - tier="1"
        receiver: 'tier-1-critical'
        group_wait: 30s
        repeat_interval: 1h

      # TIER-2: Warning
      - matchers:
        - severity="warning"
        receiver: 'tier-2-warning'
        repeat_interval: 4h

    receivers:
    # Enterprise multi-channel critical receiver
    - name: 'tier-0-all-channels'
      # Email to multiple recipients
      email_configs:
      - to: 'oncall@homelab.io,team-lead@homelab.io,platform-sre@homelab.io'
        headers:
          Priority: 'Urgent'
          X-Priority: '1'
        html: |
          <h1 style="color:red">🚨 TIER-0 CRITICAL INCIDENT</h1>
          <p><b>Response SLA:</b> 5 minutes</p>
          {{ range .Alerts }}
          <p><b>Alert:</b> {{ .Labels.alertname }}</p>
          <p><b>Summary:</b> {{ .Annotations.summary }}</p>
          {{ end }}

      # Slack critical channel
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-api-url-critical'
        channel: '#alerts-critical'
        title: '🚨 TIER-0 CRITICAL 🚨'
        color: 'danger'
        actions:
        - type: 'button'
          text: 'Grafana Dashboard'
          url: '{{ .CommonAnnotations.dashboard_url }}'
        - type: 'button'
          text: 'Runbook'
          url: '{{ .CommonAnnotations.runbook_url }}'

      # PagerDuty for real paging (future)
      # pagerduty_configs:
      # - routing_key_file: '/etc/alertmanager/secrets/pagerduty-routing-key'
      #   severity: 'critical'

      # Teams notification
      # webhook_configs:
      # - url_file: '/etc/alertmanager/secrets/teams-webhook-url'
      #   send_resolved: true

    - name: 'tier-1-critical'
      email_configs:
      - to: 'team@homelab.io'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-api-url-warning'
        channel: '#alerts-high'
        color: 'warning'

    - name: 'tier-2-warning'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-api-url-info'
        channel: '#alerts-info'
        color: 'good'

    - name: 'enterprise-default'
      slack_configs:
      - api_url_file: '/etc/alertmanager/secrets/slack-api-url-info'
        channel: '#alerts-general'

    # Inhibit rules remain the same
    inhibit_rules:
    - source_matchers:
      - severity="critical"
      target_matchers:
      - severity="warning"
      equal: ['cluster', 'namespace', 'alertname']

---
# 📂 VOLUME MOUNT CONFIGURATION FOR ALERTMANAGER DEPLOYMENT
# Add this to your AlertManager deployment volumes:
#
# volumes:
# - name: smtp-credentials
#   secret:
#     secretName: alertmanager-smtp-credentials
# - name: slack-credentials
#   secret:
#     secretName: alertmanager-slack-credentials
# - name: enterprise-credentials
#   secret:
#     secretName: alertmanager-enterprise-credentials
#
# volumeMounts:
# - name: smtp-credentials
#   mountPath: /etc/alertmanager/secrets
#   readOnly: true
# - name: slack-credentials
#   mountPath: /etc/alertmanager/secrets
#   readOnly: true
# - name: enterprise-credentials
#   mountPath: /etc/alertmanager/secrets
#   readOnly: true