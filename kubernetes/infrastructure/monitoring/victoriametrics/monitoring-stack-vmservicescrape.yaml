# ðŸŽ¯ Monitoring Stack VMServiceScrape - Self-monitoring
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMServiceScrape
metadata:
  name: grafana-operator
  namespace: monitoring
  labels:
    app: grafana-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-operator
  namespaceSelector:
    matchNames:
      - monitoring
  endpoints:
    - port: metrics
      path: /metrics
      interval: 30s
---
# ðŸŽ¯ Loki VMServiceScrape - Log aggregation metrics
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMServiceScrape
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  namespaceSelector:
    matchNames:
      - monitoring
  endpoints:
    - port: http-metrics
      path: /metrics
      interval: 30s
# ðŸŽ¯ AlertManager - Using universal service discovery via prometheus.io/scrape=true annotations
# No dedicated VMServiceScrape needed - handled by kubernetes-service-endpoints discovery
---
# ðŸŽ¯ OpenCost VMServiceScrape - Cost optimization metrics
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMServiceScrape
metadata:
  name: opencost
  namespace: monitoring
  labels:
    app: opencost
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: opencost
  namespaceSelector:
    matchNames:
      - opencost
  endpoints:
    - port: http
      path: /metrics
      interval: 30s
