# üè¢ ENTERPRISE 2025 DASHBOARDS - ConfigMap Based (Working)
# Organized folder structure with real dashboard imports

---
# üì± APPLICATIONS/N8N - Workflow Automation
apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Applications-N8N"
data:
  n8n-workflow.json: |
    {
      "dashboard": {
        "id": null,
        "title": "N8N - Workflow Automation",
        "tags": ["n8n", "automation", "workflows"],
        "panels": [
          {
            "id": 1,
            "title": "N8N Container Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"n8n\"}",
                "legendFormat": "N8N Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {"options": {"0": {"text": "DOWN"}}, "type": "value"},
                  {"options": {"1": {"text": "UP"}}, "type": "value"}
                ]
              }
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üìö APPLICATIONS/AUDIOBOOKSHELF - Media Server
apiVersion: v1
kind: ConfigMap
metadata:
  name: audiobookshelf-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Applications-Audiobookshelf"
data:
  audiobookshelf-media.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Audiobookshelf - Media Server",
        "tags": ["audiobookshelf", "media"],
        "panels": [
          {
            "id": 1,
            "title": "Audiobookshelf Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"audiobookshelf\"}",
                "legendFormat": "Status"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üéØ APPLICATIONS/ARGOCD - GitOps Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Applications-ArgoCD"
data:
  argocd-gitops.json: |
    {
      "dashboard": {
        "id": null,
        "title": "ArgoCD - GitOps Operations",
        "tags": ["argocd", "gitops"],
        "panels": [
          {
            "id": 1,
            "title": "ArgoCD Applications",
            "type": "stat",
            "targets": [
              {
                "expr": "argocd_app_info",
                "legendFormat": "Apps: {{name}}"
              }
            ]
          },
          {
            "id": 2,
            "title": "Application Health",
            "type": "piechart",
            "targets": [
              {
                "expr": "count by (health_status) (argocd_app_health_status)",
                "legendFormat": "{{health_status}}"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üìä APPLICATIONS/KAFKA - Message Streaming
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Applications-Kafka"
data:
  kafka-cluster.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Kafka - Message Streaming",
        "tags": ["kafka", "streaming"],
        "panels": [
          {
            "id": 1,
            "title": "Kafka Brokers",
            "type": "stat",
            "targets": [
              {
                "expr": "kafka_brokers",
                "legendFormat": "Brokers"
              }
            ]
          },
          {
            "id": 2,
            "title": "Messages per Second",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(kafka_server_brokertopicmetrics_messagesin_total[5m])",
                "legendFormat": "Messages/sec"
              }
            ]
          },
          {
            "id": 3,
            "title": "Consumer Lag",
            "type": "graph",
            "targets": [
              {
                "expr": "kafka_consumer_lag_sum",
                "legendFormat": "Lag: {{topic}}"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üîç APPLICATIONS/ELASTICSEARCH - Search & Analytics
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Applications-Elasticsearch"
data:
  elasticsearch-cluster.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Elasticsearch - Search Cluster",
        "tags": ["elasticsearch", "search"],
        "panels": [
          {
            "id": 1,
            "title": "Cluster Health",
            "type": "stat",
            "targets": [
              {
                "expr": "elasticsearch_cluster_health_status",
                "legendFormat": "Health"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {"options": {"0": {"text": "RED", "color": "red"}}, "type": "value"},
                  {"options": {"1": {"text": "YELLOW", "color": "yellow"}}, "type": "value"},
                  {"options": {"2": {"text": "GREEN", "color": "green"}}, "type": "value"}
                ]
              }
            }
          },
          {
            "id": 2,
            "title": "Active Nodes",
            "type": "stat",
            "targets": [
              {
                "expr": "elasticsearch_cluster_health_number_of_nodes",
                "legendFormat": "Nodes"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üíæ STORAGE/CEPH - Distributed Storage
apiVersion: v1
kind: ConfigMap
metadata:
  name: ceph-cluster-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Storage-Ceph"
data:
  ceph-cluster.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Ceph - Cluster Overview",
        "tags": ["ceph", "storage"],
        "panels": [
          {
            "id": 1,
            "title": "Cluster Health",
            "type": "stat",
            "targets": [
              {
                "expr": "ceph_health_status",
                "legendFormat": "Health Status"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {"options": {"0": {"text": "HEALTHY", "color": "green"}}, "type": "value"},
                  {"options": {"1": {"text": "WARNING", "color": "yellow"}}, "type": "value"},
                  {"options": {"2": {"text": "CRITICAL", "color": "red"}}, "type": "value"}
                ]
              }
            }
          },
          {
            "id": 2,
            "title": "Total Capacity",
            "type": "stat",
            "targets": [
              {
                "expr": "ceph_cluster_total_bytes",
                "legendFormat": "Total"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              }
            }
          },
          {
            "id": 3,
            "title": "Used Capacity",
            "type": "stat",
            "targets": [
              {
                "expr": "ceph_cluster_total_used_bytes",
                "legendFormat": "Used"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              }
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üêò DATABASES/POSTGRESQL - Database Monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Databases-PostgreSQL"
data:
  postgresql-database.json: |
    {
      "dashboard": {
        "id": null,
        "title": "PostgreSQL - Database Monitoring",
        "tags": ["postgresql", "database"],
        "panels": [
          {
            "id": 1,
            "title": "Database Connections",
            "type": "graph",
            "targets": [
              {
                "expr": "pg_stat_database_numbackends",
                "legendFormat": "{{datname}}"
              }
            ]
          },
          {
            "id": 2,
            "title": "Database Size",
            "type": "stat",
            "targets": [
              {
                "expr": "pg_database_size_bytes",
                "legendFormat": "{{datname}}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              }
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# ‚ö° DATABASES/REDIS - In-Memory Cache
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Databases-Redis"
data:
  redis-cache.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Redis - In-Memory Cache",
        "tags": ["redis", "cache"],
        "panels": [
          {
            "id": 1,
            "title": "Connected Clients",
            "type": "stat",
            "targets": [
              {
                "expr": "redis_connected_clients",
                "legendFormat": "Clients"
              }
            ]
          },
          {
            "id": 2,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "redis_memory_used_bytes",
                "legendFormat": "Used Memory"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "bytes"
              }
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üîê AUTHENTICATION/AUTHELIA - Single Sign-On
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Authentication-Authelia"
data:
  authelia-sso.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Authelia - Single Sign-On",
        "tags": ["authelia", "authentication", "sso"],
        "panels": [
          {
            "id": 1,
            "title": "Authentication Requests",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(authelia_authentication_duration_count[5m])",
                "legendFormat": "Auth Requests/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Failed Logins",
            "type": "stat",
            "targets": [
              {
                "expr": "authelia_authentication_duration_count{result=\"failed\"}",
                "legendFormat": "Failed"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üîç OBSERVABILITY/EFK-STACK - Logging Stack
apiVersion: v1
kind: ConfigMap
metadata:
  name: efk-stack-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Observability-EFK-Stack"
data:
  efk-logging.json: |
    {
      "dashboard": {
        "id": null,
        "title": "EFK Stack - Logging Overview",
        "tags": ["logging", "elasticsearch", "fluentd", "kibana"],
        "panels": [
          {
            "id": 1,
            "title": "Log Ingestion Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(fluentd_output_status_num_records_total[5m])",
                "legendFormat": "Logs/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Elasticsearch Indices",
            "type": "stat",
            "targets": [
              {
                "expr": "elasticsearch_indices_docs",
                "legendFormat": "Documents"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }

---
# üìä OBSERVABILITY/VICTORIAMETRICS - Self Monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: victoriametrics-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    grafana_folder: "Observability-VictoriaMetrics"
data:
  victoriametrics-cluster.json: |
    {
      "dashboard": {
        "id": null,
        "title": "VictoriaMetrics - Self Monitoring",
        "tags": ["victoriametrics", "monitoring"],
        "panels": [
          {
            "id": 1,
            "title": "Ingested Samples/sec",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(vm_rows_inserted_total[5m])",
                "legendFormat": "{{instance}}"
              }
            ]
          },
          {
            "id": 2,
            "title": "Active Time Series",
            "type": "stat",
            "targets": [
              {
                "expr": "vm_cache_entries{type=\"storage/tsid\"}",
                "legendFormat": "Time Series"
              }
            ]
          },
          {
            "id": 3,
            "title": "Query Duration",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(vm_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              }
            ]
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
