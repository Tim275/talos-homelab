# Example: How to create Google OAuth SealedSecret
#
# Step 1: Get Google OAuth Credentials
# - Go to: https://console.cloud.google.com
# - APIs & Services â†’ Credentials
# - Create OAuth Client ID
# - Authorized redirect URI: https://iam.timourhomelab.org/realms/kubernetes/broker/google/endpoint
# - Save Client ID and Client Secret
#
# Step 2: Create SealedSecret
#
# kubectl create secret generic keycloak-google-oauth \
#   --from-literal=client-id='YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com' \
#   --from-literal=client-secret='YOUR_GOOGLE_CLIENT_SECRET' \
#   --namespace keycloak \
#   --dry-run=client -o yaml | \
#   kubeseal -o yaml > google-oauth-sealed-secret.yaml
#
# Step 3: Apply to cluster
#
# kubectl apply -f google-oauth-sealed-secret.yaml
#
# Step 4: Trigger Google OAuth setup job
#
# kubectl delete job keycloak-google-oauth-setup -n keycloak
# kubectl apply -f google-oauth-setup.yaml
#
# The resulting SealedSecret will look like this:
#
# ---
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   name: keycloak-google-oauth
#   namespace: keycloak
# spec:
#   encryptedData:
#     client-id: AgB... (encrypted)
#     client-secret: AgB... (encrypted)
#   template:
#     metadata:
#       name: keycloak-google-oauth
#       namespace: keycloak
