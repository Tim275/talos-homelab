# üë• RBAC Configuration for LDAP Groups
# Based on enterprise best practices for role-based access control

---
# üîç VIEWERS - Read-only access to all resources (including secrets view)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: viewer-role
rules:
  # View all resources
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  # View secrets (read-only)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-viewers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: viewer-role
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: viewers  # LDAP group

---
# üë®‚Äçüíª DEVELOPERS - Read-only access (NO secret access)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: developer-role
rules:
  # View pods, deployments, services, configmaps, etc
  - apiGroups: [""]
    resources:
      - pods
      - pods/log
      - pods/status
      - services
      - endpoints
      - configmaps
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - events
      - resourcequotas
      - limitranges
      - serviceaccounts
    verbs: ["get", "list", "watch"]
  # View apps resources
  - apiGroups: ["apps"]
    resources:
      - deployments
      - daemonsets
      - statefulsets
      - replicasets
    verbs: ["get", "list", "watch"]
  # View batch resources
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch"]
  # View networking
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - networkpolicies
      - ingressclasses
    verbs: ["get", "list", "watch"]
  # View RBAC (read-only)
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
    verbs: ["get", "list", "watch"]
  # NO ACCESS TO SECRETS (security requirement)

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-developers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-role
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: developers  # LDAP group

---
# ‚öôÔ∏è OPERATORS - Deploy access (create/update/delete, NO secret deletion)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-role
rules:
  # Full access to pods
  - apiGroups: [""]
    resources:
      - pods
      - pods/log
      - pods/status
      - pods/exec
      - pods/portforward
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Full access to workloads
  - apiGroups: [""]
    resources:
      - services
      - endpoints
      - configmaps
      - persistentvolumeclaims
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Full access to apps
  - apiGroups: ["apps"]
    resources:
      - deployments
      - daemonsets
      - statefulsets
      - replicasets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Full access to batch jobs
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Full access to networking
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - networkpolicies
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Read-only for namespaces
  - apiGroups: [""]
    resources:
      - namespaces
      - events
      - resourcequotas
      - limitranges
      - persistentvolumes
    verbs: ["get", "list", "watch"]
  # Secrets: GET/LIST only (NO DELETE for security)
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  # Scale deployments
  - apiGroups: ["apps"]
    resources:
      - deployments/scale
      - statefulsets/scale
      - replicasets/scale
    verbs: ["get", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-operators
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-role
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: operators  # LDAP group
