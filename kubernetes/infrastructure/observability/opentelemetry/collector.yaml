apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: opentelemetry-system
  annotations:
    # Disable automatic Prometheus scraping for gRPC/HTTP OTLP endpoints
    prometheus.io/scrape: "false"
spec:
  mode: daemonset
  image: otel/opentelemetry-collector-contrib:0.114.0

  # Add pod annotations to disable scraping for OTLP endpoints
  podAnnotations:
    prometheus.io/scrape: "false"
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      hostmetrics:
        collection_interval: 30s
        scrapers:
          cpu:
          load:
          memory:
          disk:
          filesystem:
          network:
      kubeletstats:
        collection_interval: 30s
        auth_type: "serviceAccount"
        endpoint: "${env:K8S_NODE_NAME}:10250"
        insecure_skip_verify: true

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      memory_limiter:
        limit_mib: 400
        check_interval: 1s
      resource:
        attributes:
          - key: cluster
            value: "talos-homelab"
            action: upsert

    exporters:
      # Modern OTLP exporter for Jaeger (Netflix/Uber enterprise pattern)
      otlp/jaeger:
        endpoint: jaeger-collector.jaeger-system:14250
        tls:
          insecure: true
        headers:
          x-scope-orgid: "talos-homelab"

      # Metriken zu Prometheus (Grafana)
      prometheusremotewrite:
        endpoint: http://prometheus-operator-kube-p-prometheus.monitoring:9090/api/v1/write

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, resource]
          exporters: [otlp/jaeger]
        metrics:
          receivers: [otlp, hostmetrics, kubeletstats]
          processors: [memory_limiter, batch, resource]
          exporters: [prometheusremotewrite]

    extensions:
      health_check:
      pprof:
      zpages:
