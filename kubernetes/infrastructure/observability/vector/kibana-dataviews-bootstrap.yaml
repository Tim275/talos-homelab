---
# Kibana Data Views Bootstrap Job
# Purpose: Automatically create all Tier-0 Data Views via Kibana API
# Usage: kubectl apply -f kibana-dataviews-bootstrap.yaml

apiVersion: batch/v1
kind: Job
metadata:
  name: kibana-dataviews-bootstrap
  namespace: elastic-system
  annotations:
    argocd.argoproj.io/sync-wave: "18"
spec:
  ttlSecondsAfterFinished: 86400  # Delete after 24h
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: create-dataviews
          image: alpine/curl:latest
          env:
            - name: KIBANA_URL
              value: "http://production-kibana-kb-http.elastic-system.svc.cluster.local:5601"
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: production-cluster-es-elastic-user
                  key: elastic
          command:
            - sh
            - -c
            - |
              set -e

              echo "🚀 Starting Kibana Data Views Bootstrap..."

              # Wait for Kibana to be ready
              until curl -s -u "elastic:${ELASTIC_PASSWORD}" "${KIBANA_URL}/api/status" | grep -q "available"; do
                echo "⏳ Waiting for Kibana to be ready..."
                sleep 10
              done

              echo "✅ Kibana is ready!"

              # Function to create Data View
              create_dataview() {
                local name="$1"
                local pattern="$2"
                local id="$3"

                echo "📊 Creating Data View: ${name}"

                curl -X POST "${KIBANA_URL}/api/data_views/data_view" \
                  -u "elastic:${ELASTIC_PASSWORD}" \
                  -H 'kbn-xsrf: true' \
                  -H 'Content-Type: application/json' \
                  -d "{
                    \"data_view\": {
                      \"id\": \"${id}\",
                      \"title\": \"${pattern}\",
                      \"name\": \"${name}\",
                      \"timeFieldName\": \"@timestamp\"
                    }
                  }" || echo "⚠️ Data View ${name} might already exist"
              }

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # INFRASTRUCTURE SERVICES (Core Kubernetes)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Kubernetes Core Services" \
                "logs-kube-system.*-*" \
                "kubernetes-core"

              create_dataview \
                "Rook Ceph Storage" \
                "logs-rook-ceph.*-*" \
                "ceph-storage"

              create_dataview \
                "Cilium Networking" \
                "logs-cilium.*-*" \
                "cilium-network"

              create_dataview \
                "Certificate Manager" \
                "logs-cert-manager.*-*" \
                "cert-manager"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # PLATFORM SERVICES (GitOps, Service Mesh, Monitoring)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "ArgoCD GitOps" \
                "logs-argocd.*-*" \
                "argocd-gitops"

              create_dataview \
                "Istio Service Mesh" \
                "logs-istio.*-*" \
                "istio-mesh"

              create_dataview \
                "Elastic Observability" \
                "logs-elastic-system.*-*" \
                "elastic-platform"

              create_dataview \
                "Monitoring Stack" \
                "logs-monitoring.*-*" \
                "monitoring-stack"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # DATA SERVICES (Databases, Messaging, Cache)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Kafka Streaming" \
                "logs-kafka.*-*" \
                "kafka-streams"

              create_dataview \
                "CloudNativePG Databases" \
                "logs-cloudnative-pg.*-*" \
                "cnpg-databases"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # SECURITY & IDENTITY (Auth, Secrets)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Authelia SSO" \
                "logs-authelia.*-*" \
                "authelia-sso"

              create_dataview \
                "Keycloak IAM" \
                "logs-keycloak.*-*" \
                "keycloak-iam"

              create_dataview \
                "LLDAP Directory" \
                "logs-lldap.*-*" \
                "lldap-ldap"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # APPLICATION SERVICES (N8N Environments)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "N8N Production" \
                "logs-n8n-prod.*-*" \
                "n8n-production"

              create_dataview \
                "N8N Development" \
                "logs-n8n-dev.*-*" \
                "n8n-development"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # PHYSICAL INFRASTRUCTURE (Proxmox Hosts)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Proxmox - Nipogi Host" \
                "logs-proxmox.*-nipogi" \
                "proxmox-nipogi"

              create_dataview \
                "Proxmox - Minisforum Host" \
                "logs-proxmox.*-minisforum" \
                "proxmox-minisforum"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # TALOS NODE VIEWS (Control Plane vs Workers)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Talos Control Plane" \
                "logs-*.*-control-plane" \
                "talos-control-plane"

              create_dataview \
                "Talos Workers" \
                "logs-*.*-worker" \
                "talos-workers"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # SEVERITY VIEWS (Cross-Cluster)
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "All Critical Errors" \
                "logs-*.critical-*" \
                "severity-critical"

              create_dataview \
                "All Warnings" \
                "logs-*.warn-*" \
                "severity-warn"

              create_dataview \
                "All Info Logs" \
                "logs-*.info-*" \
                "severity-info"

              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              # UNIFIED CLUSTER VIEW
              # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
              create_dataview \
                "Full Cluster - All Logs" \
                "logs-*-*" \
                "cluster-all-logs"

              echo "✅ All Data Views created successfully!"
              echo "📊 Total: 23 Data Views"
              echo ""
              echo "📋 Categories:"
              echo "  - Infrastructure: 4 views (kube-system, ceph, cilium, cert-manager)"
              echo "  - Platform: 4 views (argocd, istio, elastic, monitoring)"
              echo "  - Data Services: 2 views (kafka, postgresql)"
              echo "  - Security: 3 views (authelia, keycloak, lldap)"
              echo "  - Applications: 2 views (n8n-prod, n8n-dev)"
              echo "  - Physical Hosts: 2 views (nipogi, minisforum)"
              echo "  - Talos Nodes: 2 views (control-plane, workers)"
              echo "  - Severity: 3 views (critical, warn, info)"
              echo "  - Unified: 1 view (all logs)"
