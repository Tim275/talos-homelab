apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization


# üåä Sync Wave 4: Rook-Ceph Storage Infrastructure (After Controllers)
commonAnnotations:
  argocd.argoproj.io/sync-wave: "4"

# üåä Rook-Ceph Storage Infrastructure (CRDs ‚Üí Operator ‚Üí Cluster)

namespace: rook-ceph

resources:
  # Upstream Rook-Ceph components
  - https://raw.githubusercontent.com/rook/rook/v1.17.7/deploy/examples/crds.yaml
  - https://raw.githubusercontent.com/rook/rook/v1.17.7/deploy/examples/common.yaml
  - https://raw.githubusercontent.com/rook/rook/v1.17.7/deploy/examples/operator.yaml

  # Enterprise components
  - priority-classes.yaml
  - cluster.yaml
  - pools.yaml
  - storage-classes.yaml
  - toolbox.yaml

  # Monitoring components
  - servicemonitor-ceph-mgr.yaml
  - servicemonitor-ceph-exporter.yaml
  - ceph-dashboard-prometheus-config.yaml

  # Health monitoring automation
  - ceph-health-rbac.yaml
  - ceph-health-monitor.yaml
  # - ceph-crash-archive.yaml  # DISABLED - Rook security blocks crash archive CLI access

  # HTTPRoute for external access
  - http-route.yaml

  # Dashboard moved to infrastructure/monitoring/dashboards-operator/
  # - ceph-dashboard.yaml

# Resource reduction for homelab stability
# - resource-reduction-patch.yaml  # Using strategic merge patch instead

# Enterprise and Talos-specific patches
patches:
  # üåä Wave -10: CRDs must deploy first
  - target:
      kind: CustomResourceDefinition
    patch: |-
      - op: add
        path: /metadata/annotations
        value:
          argocd.argoproj.io/sync-wave: "-10"
          argocd.argoproj.io/sync-options: ServerSideApply=true

  # üåä Wave -10: Namespace and RBAC with CRDs
  - target:
      kind: Namespace
      name: rook-ceph
    patch: |-
      - op: add
        path: /metadata/annotations/argocd.argoproj.io~1sync-wave
        value: "-10"

  # üåä Wave -5: Operator deployment after CRDs are ready
  - target:
      kind: Deployment
      name: rook-ceph-operator
    patch: |-
      - op: add
        path: /metadata/annotations
        value:
          argocd.argoproj.io/sync-wave: "-5"
          argocd.argoproj.io/sync-options: Prune=false

  # üåä Wave 0: Cluster resources after operator is ready
  - target:
      kind: CephCluster
      name: rook-ceph
    patch: |-
      - op: add
        path: /metadata/annotations
        value:
          argocd.argoproj.io/sync-wave: "0"
          argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true

  # üåä Wave 10: Storage pools after cluster is ready
  - target:
      kind: CephBlockPool
    patch: |-
      - op: add
        path: /metadata/annotations
        value:
          argocd.argoproj.io/sync-wave: "10"
          argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true

  # üåä Wave 15: Storage classes last
  - target:
      kind: StorageClass
    patch: |-
      - op: add
        path: /metadata/annotations/argocd.argoproj.io~1sync-wave
        value: "15"

  # CRITICAL: CSI Plugin Resource Limits (No unlimited memory!)
  - target:
      kind: DaemonSet
      name: csi-cephfsplugin
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/1/resources
        value:
          limits:
            cpu: "100m"
            memory: "128Mi"
          requests:
            cpu: "10m"
            memory: "64Mi"
  - target:
      kind: DaemonSet
      name: csi-rbdplugin
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/1/resources
        value:
          limits:
            cpu: "100m"
            memory: "128Mi"
          requests:
            cpu: "10m"
            memory: "64Mi"
  # üîç CRITICAL: Add Prometheus discovery labels to Ceph services
  - target:
      kind: Service
      name: rook-ceph-mgr
    patch: |-
      - op: add
        path: /metadata/labels/ceph_daemon_type
        value: mgr
      - op: add
        path: /metadata/labels/release
        value: prometheus-operator

  # Namespace enterprise labeling
  - target:
      kind: Namespace
      name: rook-ceph
    patch: |-
      - op: replace
        path: /metadata/labels
        value:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
          app.kubernetes.io/name: rook-ceph
          app.kubernetes.io/instance: enterprise
          environment: production
          tier: storage

  # Enterprise operator configuration
  - target:
      kind: Deployment
      name: rook-ceph-operator
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources
        value:
          limits:
            cpu: "1000m"  # Reduced from 2000m
            memory: "1Gi"  # Reduced from 2Gi to save memory
          requests:
            cpu: "200m"  # Reduced from 500m
            memory: "512Mi"  # Reduced from 1Gi
      - op: add
        path: /spec/template/spec/priorityClassName
        value: system-cluster-critical
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ROOK_LOG_LEVEL
          value: "INFO"
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ROOK_CEPH_ALLOW_LOOP_DEVICES
          value: "false"
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ROOK_ENABLE_DISCOVERY_DAEMON
          value: "true"
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ROOK_CSI_ENABLE_CEPHFS
          value: "true"
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ROOK_CSI_ENABLE_RBD
          value: "true"
      - op: add
        path: /spec/template/metadata/annotations
        value:
          prometheus.io/scrape: "true"
          prometheus.io/port: "8080"
          prometheus.io/path: "/metrics"

# Use upstream version v1.17.7 - no override needed

# Common labels removed - causes immutable selector issues

# Metadata removed to avoid conflicts
