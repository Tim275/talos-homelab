# OPTIONAL: AWS S3 Credentials Template for Offsite Backup
# ACTIVATION STEPS:
#
# 1. Create AWS S3 bucket in Frankfurt (eu-central-1):
#    - Bucket name: timour-homelab-velero-dr
#    - Storage class: Glacier Instant Retrieval (EUR 0.004/GB/month)
#    - Versioning: Enabled (protection against accidental deletion)
#    - Encryption: AES-256 (server-side)
#
# 2. Create IAM user: velero-backup-user
#    - Attach policy: AmazonS3FullAccess (or custom policy below)
#    - Generate Access Key + Secret Key
#
# 3. Create plaintext credentials file:
#    cat > /tmp/aws-credentials <<EOF
#    [default]
#    aws_access_key_id=AKIAIOSFODNN7EXAMPLE
#    aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#    EOF
#
# 4. Generate SealedSecret:
#    kubectl create secret generic velero-aws-credentials \
#      --from-file=cloud=/tmp/aws-credentials \
#      --namespace velero \
#      --dry-run=client -o yaml | \
#    kubeseal --controller-name=sealed-secrets --controller-namespace=sealed-secrets -o yaml \
#      > sealed-secret-aws.yaml
#
# 5. Clean up plaintext credentials:
#    rm -f /tmp/aws-credentials
#
# 6. Rename this template:
#    mv sealed-secret-aws.yaml.template sealed-secret-aws.yaml.backup
#
# 7. Uncomment sealed-secret-aws.yaml in kustomization.yaml
#
# 8. Apply configuration:
#    kubectl apply -f infrastructure/storage/velero/
#
# CUSTOM IAM POLICY (Least Privilege):
# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Effect": "Allow",
#       "Action": [
#         "s3:ListBucket",
#         "s3:GetBucketLocation",
#         "s3:ListBucketMultipartUploads"
#       ],
#       "Resource": "arn:aws:s3:::timour-homelab-velero-dr"
#     },
#     {
#       "Effect": "Allow",
#       "Action": [
#         "s3:PutObject",
#         "s3:GetObject",
#         "s3:DeleteObject",
#         "s3:ListMultipartUploadParts",
#         "s3:AbortMultipartUpload"
#       ],
#       "Resource": "arn:aws:s3:::timour-homelab-velero-dr/*"
#     }
#   ]
# }
#
# EXPECTED OUTPUT FORMAT (after kubeseal):
# ---
# apiVersion: bitnami.com/v1alpha1
# kind: SealedSecret
# metadata:
#   creationTimestamp: null
#   name: velero-aws-credentials
#   namespace: velero
# spec:
#   encryptedData:
#     cloud: AgA... (encrypted credentials)
#   template:
#     metadata:
#       creationTimestamp: null
#       name: velero-aws-credentials
#       namespace: velero
