# üõ°Ô∏è ENTERPRISE DISASTER RECOVERY - Tier 0 Backup
# ===================================================

# Velero Configuration
image:
  repository: velero/velero
  tag: v1.14.1

# Enterprise HA Configuration
replicas: 2

# Credentials for backup storage (Ceph RGW S3)
credentials:
  useSecret: true
  existingSecret: velero-s3-credentials  # SealedSecret mit Ceph RGW credentials

# Backup Configuration
configuration:
  # Default Backup TTL (7 days for Homelab)
  defaultBackupTTL: 168h

  backupStorageLocation:
    - name: default
      provider: aws
      bucket: velero-backups
      config:
        region: eu-west-1  # Berlin
        s3ForcePathStyle: "true"
        s3Url: http://rook-ceph-rgw-homelab-objectstore.rook-ceph.svc:80

  # Volume Snapshot Location (for PV snapshots)
  volumeSnapshotLocation:
    - name: default
      provider: csi

# Enable CSI Snapshots
snapshotsEnabled: true

# Resource Configuration
resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 256Mi

# Monitoring
metrics:
  enabled: true
  scrapeInterval: 30s
  scrapeTimeout: 10s
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8085"
      prometheus.io/path: "/metrics"

# Node Agent (for pod volume backup)
nodeAgent:
  enable: true
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

# Service Account
serviceAccount:
  server:
    create: true
    name: velero

# Init Containers (for S3 plugin support)
initContainers:
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.11.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
      limits:
        cpu: 100m
        memory: 64Mi

# Upgrade CRDs Job Configuration
upgradeCRDs: true
upgradeCRDsJob:
  podLabels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/instance: velero
    app.kubernetes.io/component: upgrade-crds
  resources:
    requests:
      cpu: 10m
      memory: 16Mi
    limits:
      cpu: 100m
      memory: 64Mi
