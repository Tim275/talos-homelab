apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization


namespace: velero

resources:
  - ns.yaml
  # ObjectBucketClaim removed - using manual CephObjectStoreUser + bucket creation
  # Separate buckets per backup type for better isolation and management
  - sealed-secret-s3.yaml    # Ceph RGW S3 credentials
  - velero-restic-credentials-sealedsecret.yaml  # Restic encryption key (client-side encryption)

  # üîê Ceph S3 Users - One per backup type
  - ceph-users/velero-cluster-backups-user.yaml
  - ceph-users/velero-pv-backups-user.yaml
  - ceph-users/n8n-prod-backups-user.yaml
  - ceph-users/infisical-prod-backups-user.yaml

patches:
  - path: patches/upgrade-job-initcontainer-resources.yaml
    target:
      kind: Job
      name: velero-upgrade-crds

helmCharts:
  - name: velero
    repo: https://vmware-tanzu.github.io/helm-charts
    version: 10.1.3
    releaseName: velero
    namespace: velero
    includeCRDs: true
    valuesInline:
      image:
        repository: velero/velero
        tag: v1.14.1
      replicas: 2
      credentials:
        useSecret: true
        existingSecret: velero-s3-credentials
        extraSecretRef: velero-restic-credentials
      upgradeJobResources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      configuration:
        features: "EnableCSI"
        defaultBackupTTL: 168h
        backupStorageLocation:
          - name: default
            provider: aws
            bucket: velero-backups
            config:
              region: us-east-1
              s3ForcePathStyle: "true"
              s3Url: http://rook-ceph-rgw-homelab-objectstore.rook-ceph.svc:80
              insecureSkipTLSVerify: "true"
        volumeSnapshotLocation:
          - name: default
            provider: csi
            config: {}  # Empty config - CSI driver handles snapshot creation
      snapshotsEnabled: true
      resources:
        limits:
          cpu: 1000m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 256Mi
      metrics:
        enabled: true
        scrapeInterval: 30s
        scrapeTimeout: 10s
        service:
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "8085"
            prometheus.io/path: "/metrics"
      deployNodeAgent: true
      nodeAgent:
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
      # üîê ENTERPRISE ENCRYPTION - Client-Side with Restic
      # Backups are encrypted BEFORE upload to S3!
      defaultVolumesToFsBackup: true  # Force Restic for all PVs
      defaultSnapshotMoveData: true   # Move snapshots via Restic (encrypted)
      podSecurityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      serviceAccount:
        server:
          create: true
          name: velero
      initContainers:
        - name: velero-plugin-for-aws
          image: velero/velero-plugin-for-aws:v1.11.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /target
              name: plugins
        - name: velero-plugin-for-microsoft-azure
          image: velero/velero-plugin-for-microsoft-azure:v1.11.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /target
              name: plugins
        - name: velero-plugin-for-gcp
          image: velero/velero-plugin-for-gcp:v1.11.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /target
              name: plugins
