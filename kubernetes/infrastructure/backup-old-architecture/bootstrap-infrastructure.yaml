# üî• ENTERPRISE TIER-0 BOOTSTRAP - AWS/GOOGLE/META PATTERN 2025!
# ================================================================
# LEVEL 1: ApplicationSet Bootstrap (Domain Control)
# LEVEL 2: kustomization.yaml (Service Control)
#
# This is the EXACT pattern used by:
# - AWS EKS Blueprints
# - Google Cloud Platform Engineering
# - Meta Production Infrastructure
# - Netflix Multi-Cluster GitOps
#
# After 40+ hours we found the TRUE Enterprise Pattern! üöÄ
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: infrastructure-bootstrap
  namespace: argocd
  labels:
    enterprise.tier: tier-0
    enterprise.pattern: inverted-bootstrap-2025
    team: timour
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    enterprise.pattern: "AWS-EKS-Blueprints-2025"
spec:
  generators:
  - list:
      elements:
      # üéõÔ∏è DOMAIN CONTROL - Comment/Uncomment = Enable/Disable ENTIRE DOMAINS!
      # ====================================================================

      # ‚úÖ ENABLED INFRASTRUCTURE DOMAINS
      - name: controllers
        path: kubernetes/infrastructure/controllers
        syncWave: "2"
      - name: network
        path: kubernetes/infrastructure/network
        syncWave: "1"
      - name: storage
        path: kubernetes/infrastructure/storage
        syncWave: "3"
      - name: monitoring
        path: kubernetes/infrastructure/monitoring
        syncWave: "5"
      - name: observability
        path: kubernetes/infrastructure/observability
        syncWave: "6"

      # ‚ùå DISABLED DOMAINS - Comment/Uncomment to control
      # - name: security
      #   path: kubernetes/infrastructure/security
      #   syncWave: "0"
      # - name: backup
      #   path: kubernetes/infrastructure/backup
      #   syncWave: "7"

  template:
    metadata:
      name: 'infrastructure-{{name}}'
      labels:
        app.kubernetes.io/managed-by: argocd
        enterprise.tier: infrastructure
        infrastructure.domain: '{{name}}'
        team: timour
      annotations:
        argocd.argoproj.io/sync-wave: '{{syncWave}}'
    spec:
      project: infrastructure
      source:
        repoURL: https://github.com/Tim275/talos-homelab
        targetRevision: HEAD
        path: '{{path}}'
        kustomize: {}  # üéØ LEVEL 2: kustomization.yaml controls services!
      destination:
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
        - PrunePropagationPolicy=foreground
        - PruneLast=true
        - RespectIgnoreDifferences=true
        - ServerSideApply=true