apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: platform-messaging
  namespace: argocd
  labels:
    platform.layer: messaging
    enterprise.tier: platform
    team: timour
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  goTemplate: true
  generators:
    # ðŸ“¬ ENTERPRISE PATTERN: Messaging Platform Services
    - list:
        elements:
          # Only services we actually have
          - name: kafka
            path: kubernetes/platform/messaging/kafka
            namespace: kafka
            critical: "true"
            component: "event-streaming"
            wave: "10"
          - name: redpanda-console
            path: kubernetes/platform/messaging/redpanda-console
            namespace: kafka
            critical: "false"
            component: "stream-management"
            wave: "11"
          - name: schema-registry
            path: kubernetes/platform/messaging/schema-registry
            namespace: kafka
            critical: "false"
            component: "schema-management"
            wave: "11"
          - name: kafdrop
            path: kubernetes/platform/messaging/kafdrop
            namespace: kafka
            critical: "false"
            component: "kafka-ui"
            wave: "11"
  template:
    metadata:
      name: 'platform-messaging-{{.name}}'
      labels:
        platform.layer: messaging
        platform.component: '{{.component}}'
        platform.critical: '{{.critical}}'
        app.kubernetes.io/managed-by: argocd
        team: timour
      annotations:
        argocd.argoproj.io/sync-wave: '{{.wave}}'
    spec:
      project: app-of-apps
      source:
        repoURL: https://github.com/Tim275/talos-homelab
        targetRevision: HEAD
        path: '{{.path}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{.namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true