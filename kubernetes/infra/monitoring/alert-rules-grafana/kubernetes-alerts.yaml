apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubernetes-alerts
  namespace: monitoring
  labels:
    app.kubernetes.io/managed-by: argocd
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  - name: kubernetes-cluster.rules
    rules:
    # Node Not Ready
    - alert: KubernetesNodeNotReady
      expr: kube_node_status_condition{condition="Ready",status="true"} == 0
      for: 5m
      labels:
        severity: critical
        component: node
      annotations:
        summary: "Kubernetes node {{ $labels.node }} not ready"
        description: "Node {{ $labels.node }} has been not ready for more than 5 minutes. Pods may be rescheduled."
        
    # Pod Crash Looping
    - alert: KubernetesPodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
      for: 5m
      labels:
        severity: warning
        component: pod
      annotations:
        summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping"
        Description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting frequently. Check pod logs for errors."
        
    # Pod Not Running
    - alert: KubernetesPodNotRunning
      expr: kube_pod_status_phase{phase!="Running",phase!="Succeeded"} == 1
      for: 10m
      labels:
        severity: warning
        component: pod
      annotations:
        summary: "Pod {{ $labels.namespace }}/{{ $labels.pod }} not running"
        description: "Pod has been in {{ $labels.phase }} phase for more than 10 minutes."
        
    # Deployment Replicas Mismatch
    - alert: KubernetesDeploymentReplicasMismatch
      expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
      for: 5m
      labels:
        severity: warning
        component: deployment
      annotations:
        summary: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} replicas mismatch"
        description: "Deployment has {{ $labels.spec_replicas }} desired replicas but only {{ $labels.available_replicas }} are available."

  - name: kubernetes-storage.rules
    rules:
    # PVC Pending
    - alert: PersistentVolumeClaimPending
      expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
      for: 5m
      labels:
        severity: warning
        component: storage
      annotations:
        summary: "PVC {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending"
        description: "Persistent Volume Claim has been pending for more than 5 minutes. Check storage provisioner."
        
    # Proxmox CSI Controller Down
    - alert: ProxmoxCSIControllerDown
      expr: kube_deployment_status_replicas{deployment="proxmox-csi-controller"} == 0
      for: 2m
      labels:
        severity: critical
        component: storage
      annotations:
        summary: "Proxmox CSI controller is down"
        description: "Proxmox CSI controller deployment has no available replicas. Storage provisioning will fail."