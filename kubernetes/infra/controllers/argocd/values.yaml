# ArgoCD configuration for homelab deployment
configs:
  cm:
    create: true
    application.resourceTrackingMethod: annotation+label
    admin.enabled: true
    url: https://argo.timourhomelab.org
    # Enable Helm support in Kustomize for all applications
    kustomize.buildOptions: --enable-helm

  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [ sh, -c ]
          args: [ kustomize build --enable-helm ]

  params:
    controller.diff.server.side: true
    server.insecure: false
    server.grpc.web: true

crds:
  install: true
  keep: false

controller:
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
    limits:
      cpu: 1000m  # Increased for handling many apps
      memory: 2Gi  # Increased to prevent OOMKilled
  # Reduce reconciliation frequency to lower CPU usage
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: argocd
  # Add environment variables to tune performance
  env:
    - name: ARGOCD_REPO_SERVER_TIMEOUT_SECONDS
      value: "90"  # Increase timeout to reduce retries
  # Prefer nodes that are NOT work-00 or work-02 (i5 server)
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            - work-00
            - work-02

dex:
  enabled: false
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      memory: 128Mi

redis:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi

server:
  service:
    type: LoadBalancer
    loadBalancerIP: "192.168.68.160"  # Static IP for ArgoCD (free IP)
    servicePortHttpsAppProtocol: kubernetes.io/h2c
  # Enable metrics for ArgoCD server
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: argocd
  certificate:
    enabled: true
    domain: argo.timourhomelab.org
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: cloudflare-cluster-issuer
    privateKey:
      algorithm: ECDSA
      size: 256
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 1Gi

repoServer:
  containerSecurityContext:
    readOnlyRootFilesystem: true
  volumes:
    - name: cmp-kustomize-build-with-helm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: { }
  # Enable metrics for repo server
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: argocd
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      memory: 1Gi  # Reduced from 2Gi to save memory
  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image: '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: [ ALL ]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-kustomize-build-with-helm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp
  # Also avoid i5 server nodes
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            - work-00
            - work-02

applicationSet:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 1Gi

notifications:
  enabled: false
server:
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 512Mi
  # Also avoid i5 server nodes
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
            - work-00
            - work-02


# Disable ApplicationSet controller if not needed
applicationSet:
  enabled: true
  resources:
    requests:
      cpu: 25m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 256Mi
