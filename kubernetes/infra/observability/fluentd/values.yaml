# SIMPLE WORKING FLUENTD CONFIGURATION
# FluentBit → Fluentd → Elasticsearch

# Deploy as Deployment with 1 replica for homelab
kind: "Deployment"
replicaCount: 1

# Use base Fluentd image without default kubernetes configs
image:
  repository: fluent/fluentd
  tag: "v1.17-1"

# Environment variables for Elasticsearch connection
env:
  - name: FLUENTD_CONF
    value: "/etc/fluent/fluent.conf"
  - name: FLUENT_ELASTICSEARCH_HOST
    value: "production-cluster-es-http.elastic-system"
  - name: FLUENT_ELASTICSEARCH_PORT  
    value: "9200"
  - name: FLUENT_ELASTICSEARCH_SCHEME
    value: "https"
  - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
    value: "false"
  - name: FLUENT_ELASTICSEARCH_USER
    value: "elastic"
  - name: FLUENT_ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: production-cluster-es-elastic-user
        key: elastic

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi

# Service for FluentBit → Fluentd communication
service:
  enabled: true
  type: ClusterIP
  ports:
    - name: forwarder
      protocol: TCP
      containerPort: 24224

# No plugins needed - already in image
plugins: []

# OVERRIDE ALL DEFAULT CONFIGS - SIMPLE WORKING CONFIG
fileConfigs:
  fluent.conf: |-
    # Receive logs from FluentBit
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>
    
    # Send everything directly to Elasticsearch
    <match **>
      @type elasticsearch
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
      ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY']}"
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      logstash_format true
      logstash_prefix homelab-logs
      include_tag_key true
      tag_key @log_name
      <buffer>
        @type file
        path /buffers/fluentd-buffers
        flush_mode interval
        flush_interval 5s
        retry_forever true
        retry_max_interval 30
        chunk_limit_size 2M
        total_limit_size 500M
        overflow_action block
      </buffer>
    </match>

# COMPLETELY DISABLE all default file configs that interfere
configMapConfigs: []
defaultConfigs:
  enabled: false
  
# OVERRIDE ALL POSSIBLE DEFAULT CONFIGS  
configMaps:
  general.conf: ""
  system.conf: ""
  forward-input.conf: ""
  output.conf: ""
  
# Disable ALL default configs from Helm chart
dashboards:
  enabled: false
defaultConfigMap:
  enabled: false

# Buffer storage
volumeMounts:
  - name: buffer-storage
    mountPath: /buffers

volumes:
  - name: buffer-storage
    emptyDir: {}

# Enable RBAC for Kubernetes metadata
serviceAccount:
  create: true
rbac:
  create: true
mountVarLogDirectory: false
mountDockerContainersDirectory: false

# COMPLETELY disable health checks
readinessProbe:
  enabled: false
livenessProbe:
  enabled: false

# No monitoring for now
serviceMonitor:
  enabled: false