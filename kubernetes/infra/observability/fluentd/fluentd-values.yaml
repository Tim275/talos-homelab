# Production Fluentd Deployment Configuration 
# Uses official fluentd image with Elasticsearch plugins
# Based on https://github.com/fluent/helm-charts/tree/main/charts/fluentd

replicaCount: 2

# Use official production image with Elasticsearch plugin
image:
  repository: fluent/fluentd
  tag: "v1.17"

# Environment variables for Elasticsearch connection
env:
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: production-cluster-es-elastic-user
        key: elastic

# Install required plugins for Elasticsearch  
plugins:
  - fluent-plugin-elasticsearch

# Resource limits for production aggregator
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi

# Service configuration for FluentBit
service:
  enabled: true
  type: ClusterIP
  ports:
    - name: forwarder
      protocol: TCP
      containerPort: 24224

# Fluentd configuration files 
fileConfigs:
  01_sources.conf: |-
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>
    
  02_filters.conf: |-
    <filter **>
      @type record_transformer
      <record>
        hostname "#{Socket.gethostname}"
        tag ${tag}
        fluentd_worker "#{worker_id}"
      </record>
    </filter>
    
  04_outputs.conf: |-
    <match **>
      @type elasticsearch
      host production-cluster-es-http.elastic-system
      port 9200
      scheme https
      ssl_verify false
      user elastic
      password "#{ENV['ELASTICSEARCH_PASSWORD']}"
      index_name fluentd-k8s
      type_name _doc
      include_tag_key true
      tag_key @log_name
      logstash_format true
      logstash_prefix fluentd-k8s
      <buffer>
        @type file
        path /buffers/fluentd-buffers
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        total_limit_size 500M
        overflow_action block
      </buffer>
    </match>

# Volume for buffers
volumeMounts:
  - name: buffer-storage
    mountPath: /buffers

volumes:
  - name: buffer-storage
    emptyDir: {}

# Service monitor for monitoring
serviceMonitor:
  enabled: true