# Minio S3-Compatible Object Storage for Velero Backups
# Optimized for homelab with minimal resource usage

# Deployment mode - single instance for homelab
mode: standalone

# Resources - lightweight for current hardware
resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 1Gi

# Storage - use persistent volumes
persistence:
  enabled: true
  storageClass: proxmox-csi
  size: 50Gi
  accessMode: ReadWriteOnce

# Service configuration  
service:
  type: ClusterIP
  port: 9000
  
# Console (Web UI) configuration
consoleService:
  type: ClusterIP
  port: 9001

# Security - create default admin user
auth:
  rootUser: minioadmin
  rootPassword: minioadmin123!
  
# Default buckets to create
buckets:
  - name: velero-backups
    policy: none
    purge: false
  - name: longhorn-backups  
    policy: none
    purge: false

# Ingress/HTTPRoute for external access (optional)
ingress:
  enabled: false

# Monitoring integration
metrics:
  serviceMonitor:
    enabled: true
    namespace: minio
    additionalLabels:
      release: prometheus-operator

# Security context
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Node placement (prefer storage-optimized workers)
nodeSelector: {}
  # node-role.kubernetes.io/worker: ""

# Resource policies
policies:
  - name: velero-policy
    statements:
      - resources:
          - "arn:aws:s3:::velero-backups/*"
        actions:
          - "s3:GetObject"
          - "s3:PutObject" 
          - "s3:DeleteObject"
      - resources:
          - "arn:aws:s3:::velero-backups"
        actions:
          - "s3:GetBucketLocation"
          - "s3:ListBucket"

# Users for different services
users:
  - accessKey: velero
    secretKey: velero-secret-key
    policy: velero-policy