apiVersion: platform.stonegarden.dev/v1alpha1
kind: Service
metadata:
  name: n8n
  namespace: services
  labels:
    category: automation
    team: platform
spec:
  # 👥 Service Ownership
  owner:
    team: "platform"
    slack: "#platform"
    email: "platform@stonegarden.dev"
    oncall: "https://grafana.stonegarden.dev/alerting"

  # 🌍 Environment Configuration
  environments:
    dev:
      cluster: homelab
      namespace: n8n-dev
      autoSync: true
      replicas: 1
      database: sqlite  # SQLite for dev simplicity
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 512Mi

    production:
      cluster: homelab
      namespace: n8n-prod
      autoSync: false  # Manual promotion required
      replicas: 2
      database: postgres  # PostgreSQL for production
      backup: enabled
      ingress: envoy
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1Gi

  # 📊 Service Level Objectives
  sla:
    availability: 99.9%
    latency: 200ms
    rpo: "4h"  # Recovery Point Objective
    rto: "30m"  # Recovery Time Objective

  # 🔄 Dependencies
  dependencies:
    - platform/data/postgres-operator
    - platform/messaging/kafka
    - infra/service-mesh/envoy

  # 📈 Monitoring & Observability
  monitoring:
    enabled: true
    dashboards:
      - grafana/n8n-overview.json
      - grafana/n8n-workflows.json
      - grafana/n8n-performance.json
    alerts:
      - prometheus/n8n-availability.yaml
      - prometheus/n8n-workflow-failures.yaml

  # 🔐 Security
  security:
    networkPolicies: true
    podSecurityStandards: restricted
    imageScanRequired: true
    secrets:
      - n8n-credentials
      - postgres-credentials