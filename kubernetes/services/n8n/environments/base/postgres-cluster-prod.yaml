# n8n PostgreSQL Cluster - Production
# Dedicated PostgreSQL database for n8n workflow automation (prod environment)

apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: n8n-postgres
  namespace: n8n-prod
  labels:
    app.kubernetes.io/name: n8n-postgres
    app.kubernetes.io/component: database
    environment: production
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # Before n8n app
spec:
  # Enterprise setup: 1 primary + 2 replicas (like real production)
  instances: 3
  
  # PostgreSQL version
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1
  
  # Resource allocation (enterprise production)
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi" 
      cpu: "500m"
      
  # Storage configuration (enterprise)
  storage:
    size: 12Gi  # Larger for production
    storageClass: rook-ceph-block-enterprise
    
  # High Availability configuration
  postgresql:
    parameters:
      # Production performance tuning
      shared_buffers: "128MB"
      effective_cache_size: "384MB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "16MB"
      # Replication settings
      max_wal_senders: "10"
      wal_level: "replica"
      hot_standby: "on"
      
  # Monitoring configuration
  monitoring:
    enabled: true
    disableDefaultQueries: false
        
  # Bootstrap from existing cluster or create new
  bootstrap:
    initdb:
      database: n8n
      owner: n8n
      secret:
        name: n8n-postgres-credentials

---
# n8n database user credentials - Prod
apiVersion: v1
kind: Secret
metadata:
  name: n8n-postgres-credentials
  namespace: n8n-prod
  annotations:
    argocd.argoproj.io/sync-wave: "0"  # Before cluster
type: kubernetes.io/basic-auth
stringData:
  username: n8n
  password: n8nProdPassword456  # Different password for prod