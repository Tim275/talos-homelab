# üõ°Ô∏è SECURITY 3-LEVEL CONTROL - MAXIMUM SECURITY GOVERNANCE!
# =====================================================================
# Level 1: DOMAIN CONTROL (this file) - Nice-to-have for extreme scenarios
# Level 2: SERVICE CONTROL (ApplicationSet lists) - Main day-to-day control
# Level 3: COMPONENT CONTROL (service/kustomization.yaml) - Fine-grained control
#
# RESULT: Every security service visible as individual Application in ArgoCD UI!

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

labels:
  - pairs:
      app.kubernetes.io/managed-by: argocd
      enterprise.tier: security
      enterprise.pattern: triple-level-control-2025
      team: timour

# üåä Sync Wave 0: Security Foundation (Before Everything)
commonAnnotations:
  argocd.argoproj.io/sync-wave: "0"

resources:
  # üõ°Ô∏è SECURITY PROJECT
  - project.yaml

  # üéõÔ∏è LEVEL 1: DOMAIN CONTROL - Comment/Uncomment for extreme scenarios
  # ====================================================================

  # üéØ ENTERPRISE GITILES PATTERN - Pure Kustomize Control
  # ======================================================
  # Comment/Uncomment individual services for TRUE control

  # üõ°Ô∏è FOUNDATION SECURITY (Comment/Uncomment individual services)
  - foundation/rbac/
  - foundation/pod-security/
  - foundation/network-policies/

  # üìã GOVERNANCE SECURITY (Comment/Uncomment individual services)
  # - governance/policy-engine/          # ‚ùå DISABLED - Not implemented yet
  # - governance/compliance/             # ‚ùå DISABLED - Not implemented yet
  # - governance/audit/                  # ‚ùå DISABLED - Not implemented yet

  # üîç RUNTIME SECURITY (Comment/Uncomment individual services)
  # - runtime/falco/                     # ‚ùå DISABLED - Runtime security not needed yet
  # - runtime/threat-detection/          # ‚ùå DISABLED - Not implemented yet
