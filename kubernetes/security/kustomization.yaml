# üõ°Ô∏è SECURITY 3-LEVEL CONTROL - MAXIMUM SECURITY GOVERNANCE!
# =====================================================================
# Level 1: DOMAIN CONTROL (this file) - Nice-to-have for extreme scenarios
# Level 2: SERVICE CONTROL (ApplicationSet lists) - Main day-to-day control
# Level 3: COMPONENT CONTROL (service/kustomization.yaml) - Fine-grained control
#
# RESULT: Every security service visible as individual Application in ArgoCD UI!

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

labels:
  - pairs:
      app.kubernetes.io/managed-by: argocd
      enterprise.tier: security
      enterprise.pattern: triple-level-control-2025
      team: timour

# üåä Sync Wave 0: Security Foundation (Before Everything)
commonAnnotations:
  argocd.argoproj.io/sync-wave: "0"

resources:
  # üõ°Ô∏è SECURITY PROJECT
  - project.yaml

  # üéõÔ∏è LEVEL 1: DOMAIN CONTROL - Comment/Uncomment for extreme scenarios
  # ====================================================================

  # ‚úÖ ENABLED DOMAINS (nice-to-have control for testing/migration/debugging)
  - foundation-app.yaml      # ‚Üí security-rbac, security-pod-security, security-network-policies, security-service-mesh-authz
  # - governance-app.yaml    # ‚Üí security-policy-engine, security-compliance, security-audit

  # ‚ùå DISABLED DOMAINS - Uncomment when needed
  # - runtime-app.yaml       # ‚ùå DISABLED - Runtime security domain not implemented yet
  # - compliance-app.yaml    # ‚ùå DISABLED - Advanced compliance domain not needed yet