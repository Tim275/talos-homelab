# ============================================================
# CILIUM NETWORK POLICY - N8N PRODUCTION (SIMPLIFIED)
# ============================================================
# Simplified Network Security for N8N Enterprise Queue Mode
#
# ARCHITECTURE:
# - n8n-main (1 replica): UI/API server (webhooks disabled)
# - n8n-webhook (2 replicas): Dedicated webhook processors (HA)
# - n8n-worker (1 replica): Workflow execution workers
#
# SECURITY MODEL:
# - INGRESS: Allow all traffic (Cloudflared/Gateway API handles external filtering)
# - EGRESS: Zero Trust - explicit allow rules for internal services only
# - Focus: Protect PostgreSQL, Redis, DNS access
#
# TRAFFIC FLOW:
# Internet → Cloudflare → Cloudflared → Envoy Gateway → N8N
# ============================================================

---
# ============================================================
# POLICY 1: N8N Main Process (UI/API)
# ============================================================
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: n8n-main
  namespace: n8n-prod
  labels:
    app: n8n
    component: main
    security.category: network-policies
    managed-by: argocd
spec:
  description: "Simplified policy for N8N main - allow all ingress, protect egress"
  endpointSelector:
    matchLabels:
      app: n8n
      component: main

  # ==========================================
  # INGRESS RULES - ALLOW ALL
  # ==========================================
  ingress:
    - {}  # Allow all ingress traffic

  # ==========================================
  # EGRESS RULES - ZERO TRUST
  # ==========================================
  egress:
    # Allow egress to PostgreSQL (CNPG cluster)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            cnpg.io/cluster: n8n-postgres
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP

    # Allow egress to Redis (queue backend)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app.kubernetes.io/name: redis
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP

    # Allow DNS resolution (kube-dns / CoreDNS)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"

    # Allow egress to kube-apiserver (for service discovery)
    - toEntities:
        - kube-apiserver

    # Allow egress to external APIs (N8N workflows need to call external services)
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "80"
              protocol: TCP

    # Allow N8N pods to reach other N8N pods (inter-pod communication)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app: n8n
      toPorts:
        - ports:
            - port: "3008"
              protocol: TCP
            - port: "5678"
              protocol: TCP

---
# ============================================================
# POLICY 2: N8N Webhook Processors
# ============================================================
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: n8n-webhook
  namespace: n8n-prod
  labels:
    app: n8n
    component: webhook
    security.category: network-policies
    managed-by: argocd
spec:
  description: "Simplified policy for N8N webhook - allow all ingress, protect egress"
  endpointSelector:
    matchLabels:
      app: n8n
      component: webhook

  # ==========================================
  # INGRESS RULES - ALLOW ALL
  # ==========================================
  ingress:
    - {}  # Allow all ingress traffic

  # ==========================================
  # EGRESS RULES - ZERO TRUST
  # ==========================================
  egress:
    # Allow egress to PostgreSQL
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            cnpg.io/cluster: n8n-postgres
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP

    # Allow egress to Redis (queue backend)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app.kubernetes.io/name: redis
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP

    # Allow DNS resolution
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"

    # Allow egress to kube-apiserver
    - toEntities:
        - kube-apiserver

    # Allow egress to external APIs
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "80"
              protocol: TCP

    # Allow N8N pods to reach other N8N pods
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app: n8n
      toPorts:
        - ports:
            - port: "3008"
              protocol: TCP
            - port: "5678"
              protocol: TCP

---
# ============================================================
# POLICY 3: N8N Workers (Execution Engines)
# ============================================================
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: n8n-worker
  namespace: n8n-prod
  labels:
    app: n8n
    component: worker
    security.category: network-policies
    managed-by: argocd
spec:
  description: "Simplified policy for N8N worker - allow all ingress, protect egress"
  endpointSelector:
    matchLabels:
      app: n8n
      component: worker

  # ==========================================
  # INGRESS RULES - ALLOW ALL
  # ==========================================
  ingress:
    - {}  # Allow all ingress traffic

  # ==========================================
  # EGRESS RULES - ZERO TRUST
  # ==========================================
  egress:
    # Allow egress to PostgreSQL (read workflow definitions)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            cnpg.io/cluster: n8n-postgres
      toPorts:
        - ports:
            - port: "5432"
              protocol: TCP

    # Allow egress to Redis (pull jobs from queue)
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app.kubernetes.io/name: redis
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP

    # Allow DNS resolution
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"

    # Allow egress to kube-apiserver
    - toEntities:
        - kube-apiserver

    # Allow egress to external APIs (workers execute workflow API calls)
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "80"
              protocol: TCP

    # Allow N8N pods to reach other N8N pods
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: n8n-prod
            app: n8n
      toPorts:
        - ports:
            - port: "3008"
              protocol: TCP
            - port: "5678"
              protocol: TCP
