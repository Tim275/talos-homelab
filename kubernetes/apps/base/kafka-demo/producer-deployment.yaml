apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-registration-producer
  namespace: kafka-demo
  labels:
    app.kubernetes.io/name: user-registration-producer
    app.kubernetes.io/part-of: kafka-demo
    app.kubernetes.io/component: producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: user-registration-producer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-registration-producer
        app.kubernetes.io/part-of: kafka-demo
        app.kubernetes.io/component: producer
    spec:
      containers:
      - name: producer
        image: quay.io/strimzi/kafka:latest-kafka-3.8.0
        command:
        - /bin/sh
        - -c
        args:
        - |
          # Wait for Kafka to be ready
          echo "Waiting for Kafka to be ready..."
          sleep 30

          # Create topic if not exists
          kafka-topics.sh --bootstrap-server my-cluster-kafka-bootstrap.kafka:9092 \
            --create --if-not-exists --topic user-registrations \
            --partitions 3 --replication-factor 3

          # Start producing messages
          echo "Starting User Registration Producer..."
          while true; do
            TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
            USER_ID="user-$(shuf -i 1000-9999 -n 1)"
            EMAIL="${USER_ID}@example.com"
            REGION=$(shuf -e "us-east-1" "eu-west-1" "ap-southeast-1" -n 1)

            MESSAGE="{\"user_id\":\"${USER_ID}\",\"email\":\"${EMAIL}\",\"timestamp\":\"${TIMESTAMP}\",\"region\":\"${REGION}\",\"event_type\":\"user_registration\"}"

            echo "Producing: ${MESSAGE}"
            echo "${MESSAGE}" | kafka-console-producer.sh \
              --bootstrap-server my-cluster-kafka-bootstrap.kafka:9092 \
              --topic user-registrations

            sleep $(shuf -i 2-8 -n 1)
          done
        env:
        - name: KAFKA_BROKERS
          value: "my-cluster-kafka-bootstrap.kafka:9092"
        - name: TOPIC_NAME
          value: "user-registrations"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"