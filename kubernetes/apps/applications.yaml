apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: applications
  namespace: argocd
  labels:
    enterprise.tier: applications
    team: timour
  annotations:
    argocd.argoproj.io/sync-wave: "20"
spec:
  goTemplate: true
  generators:
    # ðŸŽ¯ ENTERPRISE PATTERN: Kustomize-controlled Applications
    - list:
        elements:
          - appName: audiobookshelf
            env: dev
            server: https://kubernetes.default.svc
          - appName: audiobookshelf
            env: prod
            server: https://kubernetes.default.svc
          - appName: n8n
            env: dev
            server: https://kubernetes.default.svc
          - appName: n8n
            env: prod
            server: https://kubernetes.default.svc
          - appName: kafka-demo
            env: dev
            server: https://kubernetes.default.svc
          # - appName: kafka-demo
          #   env: prod
          #   server: https://kubernetes.default.svc
          # - appName: quantlab  # Disabled
          #   env: dev
          #   server: https://kubernetes.default.svc
                # - env: staging
                #   server: https://staging-cluster.example.com
  template:
    metadata:
      name: '{{.appName}}-{{.env}}'
      labels:
        app.kubernetes.io/name: '{{.appName}}'
        app.kubernetes.io/environment: '{{.env}}'
        app.kubernetes.io/managed-by: argocd
        # TIER 0 ENTERPRISE: Service Ownership Pattern
        team: timour
        owner: timour
        service.tier: "application"
        service.lifecycle: "production"
        service.support: "24x7"
        cost.center: "engineering"
        business.unit: "platform"
      annotations:
        # Service Ownership Metadata
        owner.email: "timour@stonegarden.dev"
        owner.slack: "#timour-team"
        service.runbook: "https://runbooks.stonegarden.dev/{{.appName}}"
        service.dashboard: "https://grafana.stonegarden.dev/d/{{.appName}}"
        service.oncall: "https://pagerduty.com/{{.appName}}"
    spec:
      project: default
      sources:
        # Primary application source
        - repoURL: https://github.com/Tim275/talos-homelab
          targetRevision: HEAD
          path: 'kubernetes/apps/overlays/{{.env}}/{{.appName}}'
        # Security policies source
        - repoURL: https://github.com/Tim275/talos-homelab
          targetRevision: HEAD
          path: 'kubernetes/security/foundation/network-policies'
      destination:
        server: '{{.server}}'
        namespace: '{{.appName}}-{{.env}}'
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        syncOptions:
          - CreateNamespace=true