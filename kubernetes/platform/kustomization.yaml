apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 🏢 ENTERPRISE PLATFORM - TRUE NETFLIX/GOOGLE/SPOTIFY PATTERN!
# ================================================================
# This structure follows REAL enterprise patterns from:
# - Netflix: Layered platform with service ownership
# - Google: Cloud-native platform engineering
# - Spotify: Golden Path platform templates
# - Microsoft: Multi-cluster platform as code

# 🚀 ENTERPRISE TIER-0 NON PLUS ULTRA PATTERN!
# ===============================================
# TRUE KUSTOMIZE CONTROL - Comment/Uncomment ANYTHING!
# Netflix/Google/Meta/Amazon LEVEL - GRANULAR WIE FICK!
#
# 💡 CONTROL EVERYTHING:
# - Comment line = Component DISABLED
# - Uncomment line = Component ENABLED
# - NO ApplicationSets needed anymore!
# - PURE KUSTOMIZE POWER!

namespace: argocd

# 🏢 Enterprise Platform Labels
labels:
- includeSelectors: true
  pairs:
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/part-of: timour-homelab
    app.kubernetes.io/layer: platform
    enterprise.pattern: applicationset
    team: timour

# 📊 Enterprise Annotations
commonAnnotations:
  argocd.argoproj.io/sync-wave: "12"
  enterprise.architecture: "true"
  gitops.pattern: "applicationset-layers"
  platform.scalability: "1000+"

# 🎯 GRANULAR COMPONENT CONTROL via Strategic Merge Patches
# ==========================================================
# This is a cleaner way but ApplicationSets don't support strategic merge well
# So we need to use JSON patches or better: separate Application files!

resources:
  # 🏛️ PLATFORM PROJECT
  - project.yaml

  # 🗄️ DATA LAYER (Wave 12)
  # ========================
  - influxdb-app.yaml                 # ✅ Time-series database
  # - mongodb-app.yaml                # ❌ Document database (not needed)
  - cloudbeaver-app.yaml              # ✅ DB management UI
  # - quantlab-postgres-app.yaml      # ❌ Quantlab database
  # - n8n-app.yaml                    # ❌ Platform N8N (use apps/ instead)

  # 📨 MESSAGING LAYER (Wave 12)
  # =============================
  - kafka-app.yaml                    # ✅ Message broker
  - schema-registry-app.yaml          # ✅ Schema management
  # - kafdrop-app.yaml                # ❌ Kafka UI (replaced by Redpanda)
  - redpanda-console-app.yaml         # ✅ Modern Kafka UI

  # 👨‍💻 DEVELOPER LAYER (Wave 15)
  # ===============================
  # - backstage-app.yaml              # ❌ Developer portal (no implementation)
  # - git-ops-app.yaml                # ❌ GitOps tools (no implementation)
  # - ci-cd-app.yaml                  # ❌ CI/CD platform (no implementation)