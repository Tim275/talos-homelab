apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# üè¢ ENTERPRISE PLATFORM - TRUE NETFLIX/GOOGLE/SPOTIFY PATTERN!
# ================================================================
# This structure follows REAL enterprise patterns from:
# - Netflix: Layered platform with service ownership
# - Google: Cloud-native platform engineering
# - Spotify: Golden Path platform templates
# - Microsoft: Multi-cluster platform as code

# üöÄ ENTERPRISE TIER-0 NON PLUS ULTRA PATTERN!
# ===============================================
# TRUE KUSTOMIZE CONTROL - Comment/Uncomment ANYTHING!
# Netflix/Google/Meta/Amazon LEVEL - GRANULAR WIE FICK!
#
# üí° CONTROL EVERYTHING:
# - Comment line = Component DISABLED
# - Uncomment line = Component ENABLED
# - NO ApplicationSets needed anymore!
# - PURE KUSTOMIZE POWER!

namespace: argocd

# üè¢ Enterprise Platform Labels
labels:
- includeSelectors: true
  pairs:
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/part-of: timour-homelab
    app.kubernetes.io/layer: platform
    enterprise.pattern: applicationset
    team: timour

# üìä Enterprise Annotations
commonAnnotations:
  argocd.argoproj.io/sync-wave: "12"
  enterprise.architecture: "true"
  gitops.pattern: "applicationset-layers"
  platform.scalability: "1000+"

# üéØ GRANULAR COMPONENT CONTROL via Strategic Merge Patches
# ==========================================================
# This is a cleaner way but ApplicationSets don't support strategic merge well
# So we need to use JSON patches or better: separate Application files!

resources:
  # üèõÔ∏è PLATFORM PROJECT
  - project.yaml

  # üéØ PLATFORM APPLICATIONSET
  - applications.yaml

  # NOTE: Actual platform services are discovered by ApplicationSet
  # from subdirectories and controlled via their own kustomization.yaml files