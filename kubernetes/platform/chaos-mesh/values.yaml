# Chaos Mesh Configuration
# https://chaos-mesh.org/docs/

# Dashboard configuration
dashboard:
  create: true
  # SECURITY: Dashboard requires authentication
  securityMode: true
  rootUrl: http://chaos-mesh.timourhomelab.org

  # Resource limits
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Controller Manager
controllerManager:
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Enable ServiceMonitor for Prometheus
  serviceMonitor:
    enabled: true

# Chaos Daemon - Runs on each node
chaosDaemon:
  runtime: containerd
  socketPath: /run/containerd/containerd.sock

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# DNS Chaos - Test DNS failures
dnsServer:
  create: true
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi

# Prometheus monitoring
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true

# Security Context
securityContext:
  runAsNonRoot: false  # Chaos Mesh needs root for some operations
  runAsUser: 0

# RBAC
rbac:
  create: true

# Enable different chaos types
# https://chaos-mesh.org/docs/simulate-pod-chaos-on-kubernetes/
enablePodChaos: true          # Kill pods, container failures
enableNetworkChaos: true      # Network delays, packet loss
enableIOChaos: true           # Disk I/O failures
enableStressChaos: true       # CPU/Memory stress
enableTimeChaos: true         # Clock skew
enableDNSChaos: true          # DNS resolution failures
enableHTTPChaos: true         # HTTP request/response manipulation
enableKernelChaos: true       # Kernel failures
enableJVMChaos: false         # Java app chaos (not needed)
enableAWSChaos: false         # AWS-specific (not applicable)
enableGCPChaos: false         # GCP-specific (not applicable)
