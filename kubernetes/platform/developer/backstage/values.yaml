# ðŸŒŸ ENTERPRISE DEVELOPER PORTAL - Spotify Pattern
# ====================================================

image:
  registry: ghcr.io
  repository: backstage/backstage
  tag: latest

# Enterprise HA Configuration
replicaCount: 2

# Database Configuration (PostgreSQL)
postgresql:
  enabled: false  # Using external CloudNative-PG cluster

# External Database
externalDatabase:
  host: backstage-postgres-rw.backstage.svc.cluster.local
  port: 5432
  user: backstage
  database: backstage
  existingSecret: backstage-postgres-credentials
  existingSecretPasswordKey: password

# Service Configuration
service:
  type: ClusterIP
  port: 7007

# Ingress disabled (using Gateway API)
ingress:
  enabled: false

# Enterprise Application Configuration
appConfig:
  app:
    title: Timour Homelab Developer Portal
    baseUrl: http://backstage.stonegarden.dev

  backend:
    baseUrl: http://backstage.stonegarden.dev
    database:
      client: pg
      connection:
        host: backstage-postgres-rw.backstage.svc.cluster.local
        port: 5432
        user: backstage
        database: backstage

  # Kubernetes Plugin Integration
  kubernetes:
    serviceLocatorMethod:
      type: 'multiTenant'
    clusterLocatorMethods:
      - type: 'config'
        clusters:
          - url: https://kubernetes.default.svc
            name: homelab-cluster
            authProvider: 'serviceAccount'
            skipTLSVerify: true

  # ArgoCD Integration
  argocd:
    appLocatorMethods:
      - type: 'config'
        instances:
          - name: homelab-argocd
            url: https://argocd.stonegarden.dev
            token: $ARGOCD_AUTH_TOKEN

  # Grafana Integration
  grafana:
    unifiedAlerting: true
    domain: https://grafana.stonegarden.dev

  # Prometheus Integration
  prometheus:
    proxyPath: /prometheus

  # Catalog Configuration
  catalog:
    rules:
      - allow: [Component, System, API, Resource, Location]
    locations:
      # Import existing services from Kubernetes
      - type: url
        target: https://github.com/Tim275/talos-homelab/blob/main/catalog-info.yaml

# Security Configuration
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

# Resource Configuration
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Service Account for Kubernetes Plugin
serviceAccount:
  create: true
  name: backstage
