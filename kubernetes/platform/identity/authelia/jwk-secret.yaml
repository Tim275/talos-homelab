apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: authelia-jwk
  namespace: authelia
spec:
  template:
    metadata:
      name: authelia-jwk
      namespace: authelia
    type: Opaque
  encryptedData:
    # Generate RSA private key for JWT signing:
    #
    # 1. Generate RSA private key (REQUIRED for OIDC):
    #    openssl genrsa -out private.pem 4096
    #
    # 2. Optional: Generate ECDSA key for extra security:
    #    openssl ecparam -name prime256v1 -genkey -noout -out ecdsa.pem
    #
    # 3. Create and seal the secret:
    #    kubectl create secret generic authelia-jwk \
    #      --from-file=rsa-private.pem=private.pem \
    #      --namespace=authelia --dry-run=client -o yaml \
    #    | kubeseal -o yaml > jwk-secret.yaml
    #
    # PLACEHOLDER (MUST be replaced with actual sealed secret):
    rsa-private.pem: "SEALED_SECRET_PLACEHOLDER_RSA_KEY"