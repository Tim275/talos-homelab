apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: redis-n8n
  namespace: n8n-prod
  labels:
    app.kubernetes.io/name: redis-n8n
    app.kubernetes.io/component: message-queue
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: redis
      version: 20.5.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: n8n-prod
      interval: 12h
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    # ==========================================
    # ARCHITECTURE: Master + 2 Replicas
    # ==========================================
    architecture: replication

    # ==========================================
    # AUTHENTICATION
    # ==========================================
    auth:
      enabled: true
      existingSecret: redis-n8n-password
      existingSecretPasswordKey: redis-password

    # ==========================================
    # MASTER CONFIGURATION
    # ==========================================
    master:
      count: 1

      persistence:
        enabled: true
        storageClass: rook-ceph-block-enterprise
        size: 8Gi
        accessModes:
          - ReadWriteOnce

      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"

      podSecurityContext:
        enabled: true
        fsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true

      containerSecurityContext:
        enabled: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

    # ==========================================
    # REPLICA CONFIGURATION
    # ==========================================
    replica:
      replicaCount: 2  # HA: 2 replicas

      persistence:
        enabled: true
        storageClass: rook-ceph-block-enterprise
        size: 8Gi
        accessModes:
          - ReadWriteOnce

      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"

      podSecurityContext:
        enabled: true
        fsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true

      containerSecurityContext:
        enabled: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

    # ==========================================
    # SENTINEL (Optional - for HA failover)
    # ==========================================
    sentinel:
      enabled: false  # Can enable later for automatic failover

    # ==========================================
    # METRICS
    # ==========================================
    metrics:
      enabled: true

      resources:
        requests:
          memory: "32Mi"
          cpu: "50m"
        limits:
          memory: "64Mi"
          cpu: "100m"

      serviceMonitor:
        enabled: true
        namespace: monitoring
        labels:
          release: prometheus-operator

    # ==========================================
    # COMMON CONFIGURATION
    # ==========================================
    commonConfiguration: |-
      # Memory management
      maxmemory 384mb
      maxmemory-policy allkeys-lru

      # Persistence
      save 900 1
      save 300 10
      save 60 10000

      # BullMQ optimization
      notify-keyspace-events Ex

      # Performance
      tcp-backlog 511
      timeout 0
      tcp-keepalive 300

    # ==========================================
    # NETWORK POLICY
    # ==========================================
    networkPolicy:
      enabled: false  # Using Cilium instead
