apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redis-n8n
  namespace: argocd
  labels:
    app.kubernetes.io/managed-by: argocd
    platform.domain: data
  annotations:
    argocd.argoproj.io/sync-wave: "15"
spec:
  project: platform
  source:
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 19.6.4  # Use older stable version with working images
    chart: redis
    helm:
      releaseName: redis-n8n
      valuesObject:
        # ==========================================
        # ARCHITECTURE: Master + 2 Replicas
        # ==========================================
        architecture: replication

        # ==========================================
        # AUTHENTICATION
        # ==========================================
        auth:
          enabled: true
          existingSecret: redis-n8n-password
          existingSecretPasswordKey: redis-password

        # ==========================================
        # MASTER CONFIGURATION
        # ==========================================
        master:
          count: 1
          persistence:
            enabled: true
            storageClass: rook-ceph-block-enterprise
            size: 8Gi
            accessModes:
              - ReadWriteOnce
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          podSecurityContext:
            enabled: true
            fsGroup: 1001
            runAsUser: 1001
            runAsNonRoot: true
          containerSecurityContext:
            enabled: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

        # ==========================================
        # REPLICA CONFIGURATION
        # ==========================================
        replica:
          replicaCount: 2  # HA: 2 replicas
          persistence:
            enabled: true
            storageClass: rook-ceph-block-enterprise
            size: 8Gi
            accessModes:
              - ReadWriteOnce
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          podSecurityContext:
            enabled: true
            fsGroup: 1001
            runAsUser: 1001
            runAsNonRoot: true
          containerSecurityContext:
            enabled: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

        # ==========================================
        # SENTINEL (Optional - for HA failover)
        # ==========================================
        sentinel:
          enabled: false  # Can enable later for automatic failover

        # ==========================================
        # METRICS
        # ==========================================
        metrics:
          enabled: true
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          serviceMonitor:
            enabled: true
            namespace: monitoring
            labels:
              release: prometheus-operator

        # ==========================================
        # COMMON CONFIGURATION
        # ==========================================
        commonConfiguration: |-
          # Memory management
          maxmemory 384mb
          maxmemory-policy allkeys-lru

          # Persistence
          save 900 1
          save 300 10
          save 60 10000

          # BullMQ optimization
          notify-keyspace-events Ex

          # Performance
          tcp-backlog 511
          timeout 0
          tcp-keepalive 300

        # ==========================================
        # NETWORK POLICY
        # ==========================================
        networkPolicy:
          enabled: false  # Using Cilium instead
  destination:
    server: https://kubernetes.default.svc
    namespace: n8n-prod
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
